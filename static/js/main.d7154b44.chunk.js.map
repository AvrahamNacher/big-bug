{"version":3,"sources":["components/Header.jsx","components/BugListViewHeader.jsx","backend/dbBugRequests.js","components/BugListView.jsx","backend/dbUserRequests.js","components/Login.jsx","components/Register.jsx","components/Dashboard.jsx","components/SelectUser.jsx","components/SelectBugSeverityLevel.jsx","components/SelectBugStatus.jsx","components/CreateBug.jsx","components/EditBug.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","currentUserData","firstName","lastName","isAuthenticated","id","to","style","textDecoration","className","marginTop","onClick","logout","type","sortDirection","previousSortColumnName","BugListViewHeader","bugListViewKeys","Object","keys","headerInfo","filter","key","includes","map","index","setBugList","sortColumnName","dataType","bugList","newSort","sort","a","b","comparison","toLowerCase","sortStringColumn","sortNumberColumn","sortColumn","toUpperCase","deleteBugs","idList","cb","require","request","method","url","form","err","httpResponse","body","console","log","response","JSON","parse","BugListView","useState","bugsToDelete","setBugsToDelete","toggleCheckbox","e","target","name","checked","el","deleteCallback","onChange","masterCheckbox","checkAllItems","length","bug","bugStatusName","bugSeverityName","bugTitle","bugCreatedDate","bugAssignedTo","bugDueDate","bugStatus","bugSeverity","bugReproducableFrequency","bugAssignedToName","userList","user","parseInt","bugStatusStages","status","bugSeverityLevels","SeverityLevel","SQL","join","dbBugs","value","Login","loginError","setLoginError","handleInput","setCurrentUserData","htmlFor","email","autoFocus","pwd","userData","callBackResponse","async","result","Table","dbUser","data","setIsAuthenticated","Register","setUserData","register","phone","affectedRows","db","oldState","onInput","placeholder","Dashboard","callBack","useEffect","Promise","resolve","reject","list","unshift","setUserList","generateUserList","SelectUser","SelectBugSeverityLevel","SelectBugStatus","CreateBug","resetBugFields","bugDescription","Date","toISOString","split","bugCreatedBy","newBug","setNewBug","message","messageType","show","submitMessage","setSubmitMessage","callback","onSubmit","preventDefault","bugLevel","EditBug","useParams","updateCallback","updateBug","newStatus","App","setBugSeverityLevels","setBugStatusStages","levels","stages","localStorage","setItem","authenticated","newData","newState","exact","path","newList","users","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7154b44.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import menuHamburger from '../img/menu-hamburger.png'\r\n\r\nimport './Header.css';\r\n// import '../img/menu-hamburger.png'\r\nexport default function Header(props) {\r\n    const { firstName =\"Default\", lastName = \"User\"} = props.currentUserData;\r\n\r\n    return (\r\n        <header>\r\n            {props.isAuthenticated\r\n                ? <div id=\"headerContainer\">\r\n                    <div id=\"userName\">Welcome, {firstName} {lastName}</div>\r\n                    <div id=\"headerMenu\">\r\n                        <Link to=\"/\" style={{ textDecoration: 'none' }}><div className=\"headerItem\">Dashboard</div></Link>\r\n                        <Link to=\"/createBug\" style={{ textDecoration: 'none' }}><div className=\"headerItem\">Create Bug</div></Link>\r\n                        <i className=\"fa fa-cog\" style={{ marginTop: '5px' }}></i>\r\n                        <Link to=\"/\" style={{ textDecoration: 'none' }}><div className=\"headerItem\"><span onClick={props.logout} type=\"text\" >Logout</span></div></Link>\r\n                    </div>\r\n                </div>\r\n                : null}\r\n        </header>\r\n\r\n    );\r\n}\r\n","// https://stackoverflow.com/questions/4647817/javascript-object-rename-key\r\nimport React from 'react';\r\n\r\nimport './BugListView.css'\r\n\r\nlet sortDirection = true;\r\nlet previousSortColumnName = '';\r\n\r\nexport default function BugListViewHeader(props) {\r\n    // console.log(\"in bugHeader\", props.headerInfo);\r\n\r\n    // function renameKeys(obj, newKeys) {\r\n    //     const keyValues = Object.keys(obj).map(key => {\r\n    //         const newKey = newKeys[key] || key;\r\n    //         return { [newKey]: obj[key] };\r\n    //     });\r\n    //     return Object.assign({}, ...keyValues);\r\n    // }\r\n\r\n\r\n    const bugListViewKeys = ['id', 'bugTitle', 'bugCreatedDate', 'bugAssignedTo', 'bugDueDate', 'bugStatus', 'bugSeverity', 'bugReproducibleFrequency'];\r\n    // TODO update header names, but retain sort option with real key names\r\n    // const bugListViewKeysToDisplay = ['id', 'title', 'createdDate', 'assigned to', 'due', 'status', 'severity', 'reproducable'];\r\n    // debugger;\r\n    let allKeys = Object.keys(props.headerInfo);\r\n    let keysToShow = allKeys.filter( key => bugListViewKeys.includes(key));\r\n    keysToShow = bugListViewKeys;\r\n\r\n    // const newKeyNames = { bugTitle: \"title\", bugCreatedDate: \"created\"};\r\n    // keysToShow = renameKeys(keysToShow, newKeyNames);\r\n\r\n    // create initial sort based on first key in list\r\n    // useEffect( () => {\r\n    //     props.setBugList(sortColumn (props, bugListViewKeys[0]));\r\n    // },[]);\r\n\r\n    \r\n    return (\r\n        keysToShow.map( (key, index) => {\r\n            return <th onClick={() => { props.setBugList( sortColumn(props, key) ); } } \r\n                key={index}>\r\n                {key.toUpperCase()}\r\n            </th>\r\n        })\r\n    )\r\n}\r\n\r\nfunction sortStringColumn (a, b, sortColumnName) {\r\n    let comparison = 0;\r\n    if (a[sortColumnName].toLowerCase() > b[sortColumnName].toLowerCase()) {\r\n        comparison = (sortDirection) ? 1 : -1;\r\n    } else if (a[sortColumnName].toLowerCase() < b[sortColumnName].toLowerCase()) {\r\n        comparison = (sortDirection) ? -1 : 1;\r\n    }\r\n    return comparison;\r\n}\r\n\r\nfunction sortNumberColumn (a, b, sortColumnName) {\r\n    let comparison = 0;\r\n    if (a[sortColumnName] > b[sortColumnName]) {\r\n        comparison = (sortDirection) ? 1 : -1;\r\n    } else if (a[sortColumnName] < b[sortColumnName]) {\r\n        comparison = (sortDirection) ? -1 : 1;\r\n    }\r\n    return comparison;\r\n}\r\n\r\nfunction sortColumn (props, sortColumnName) {\r\n    if (previousSortColumnName === sortColumnName) {\r\n        sortDirection = !sortDirection;\r\n    } else {\r\n        sortDirection = true;\r\n        previousSortColumnName = sortColumnName;\r\n    }\r\n\r\n    const dataType = typeof props.bugList[0][sortColumnName];\r\n    let newSort = [...props.bugList];\r\n\r\n    switch (dataType) {\r\n        case 'string':\r\n            newSort.sort( (a, b) => sortStringColumn (a, b, sortColumnName));\r\n            break;\r\n        case 'number':\r\n            newSort.sort( (a, b) => sortNumberColumn (a, b, sortColumnName));\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return newSort;\r\n}","function submitBug(data, cb) {\r\n  var request = require('request');\r\n\r\n  console.log(\"submitting request\");\r\n  console.log(data);\r\n\r\n  const {\r\n    bugTitle,\r\n    bugDescription,\r\n    bugCreatedDate,\r\n    bugCreatedBy,\r\n    bugAssignedTo,\r\n    bugDueDate,\r\n    bugStatus,\r\n    bugSeverity,\r\n    bugReproducableFrequency\r\n  } = data;\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/submitBug',\r\n    form: {\r\n      \"bugTitle\": bugTitle,\r\n      \"bugDescription\": bugDescription,\r\n      \"bugCreatedDate\": bugCreatedDate,\r\n      \"bugCreatedBy\": bugCreatedBy,\r\n      \"bugAssignedTo\": bugAssignedTo,\r\n      \"bugDueDate\": bugDueDate,\r\n      \"bugStatus\": bugStatus,\r\n      \"bugSeverity\": bugSeverity,\r\n      \"bugReproducableFrequency\": bugReproducableFrequency\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    let result = JSON.parse(body).affectedRows;\r\n    cb(result);\r\n  });\r\n}\r\n\r\nasync function getAllBugs(cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/getAllBugs',\r\n    form: {\r\n      \"AD_PageNbr\": \"1\",\r\n      \"AD_PageSize\": \"500\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    let result = JSON.parse(body);\r\n    // console.log(result);\r\n    cb(result.Table);\r\n  });\r\n}\r\n\r\nfunction getBug(id, cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/getBug',\r\n    form: {\r\n      \"id\": id,\r\n      \"AD_PageNbr\": \"1\",\r\n      \"AD_PageSize\": \"500\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    console.log(body);\r\n    let response = JSON.parse(body);\r\n    cb(response.Table[0]);\r\n  });\r\n}\r\n\r\nfunction updateBug(bug, cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/updateBug',\r\n    form: {\r\n      \"id\": bug.id,\r\n      \"bugTitle\": bug.bugTitle,\r\n      \"bugDescription\": bug.bugDescription,\r\n      \"bugCreatedDate\": bug.bugCreatedDate,\r\n      \"bugCreatedBy\": bug.bugCreatedBy,\r\n      \"bugAssignedTo\": bug.bugAssignedTo,\r\n      \"bugDueDate\": bug.bugDueDate,\r\n      \"bugStatus\": bug.bugStatus,\r\n      \"bugSeverity\": bug.bugSeverity,\r\n      \"bugReproducableFrequency\": bug.bugReproducableFrequency\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    console.log(body);\r\n    let response = JSON.parse(body);\r\n    cb(response.affectedRows);\r\n  });\r\n}\r\n\r\nfunction deleteBugs(idList, cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/deleteBugs',\r\n    form: {\r\n      \"idList\": idList // \"(id = 5) OR (id = 2)\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    console.log(body);\r\n    let response = JSON.parse(body);\r\n    cb(response);\r\n  });\r\n}\r\n\r\nasync function getBugSeverityLevels(cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/getBugSeverityLevels',\r\n    form: {\r\n      \"AD_PageNbr\": \"1\",\r\n      \"AD_PageSize\": \"500\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    let response = JSON.parse(body);\r\n    cb(response.Table);\r\n  });\r\n}\r\n\r\nfunction getBugStatusStages(cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/getBugStatusStages',\r\n    form: {\r\n      \"AD_PageNbr\": \"1\",\r\n      \"AD_PageSize\": \"500\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    const response = JSON.parse(body);\r\n    cb(response.Table);\r\n  });\r\n}\r\n\r\nexport {\r\n  submitBug,\r\n  getAllBugs,\r\n  getBug,\r\n  updateBug,\r\n  deleteBugs,\r\n  getBugSeverityLevels,\r\n  getBugStatusStages\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BugListViewHeader from './BugListViewHeader';\r\nimport * as dbBugs from '../backend/dbBugRequests';\r\n\r\nimport './BugListView.css'\r\n\r\nexport default function BugListView(props) {\r\n    const [bugsToDelete, setBugsToDelete] = useState([]);\r\n\r\n    const toggleCheckbox = e => {\r\n        const { name, checked } = e.target; // destructuring\r\n        if (checked) {\r\n            setBugsToDelete([...bugsToDelete, name])\r\n        } else {\r\n            setBugsToDelete(bugsToDelete.filter(el => el !== name));\r\n        };\r\n    }\r\n\r\n    const toggleAllCheckBoxes = e => {\r\n        const { checked: masterCheckbox } = e.target;\r\n        console.log(\"master checkbox = \" + masterCheckbox);\r\n        if (masterCheckbox) {\r\n            let checkAllItems = props.bugList.map(el => `(id=${el.id})`);\r\n            setBugsToDelete(checkAllItems);\r\n\r\n        } else {\r\n            setBugsToDelete([]);\r\n        }\r\n    }\r\n\r\n    const deleteCallback = response => {\r\n        console.log(response);\r\n    }\r\n\r\n    const deleteBugs = () => {\r\n        let SQL = bugsToDelete.join(' OR ');\r\n        console.log(SQL);\r\n        dbBugs.deleteBugs(SQL, deleteCallback);\r\n    }\r\n\r\n    const usersCallback = userList => { props.setUserList(userList); }\r\n\r\n\r\n    function listBugs() {\r\n\r\n        return props.bugList.map(bug => {\r\n            const {\r\n                id,\r\n                bugTitle,\r\n                // bugDescription,\r\n                bugCreatedDate,\r\n                // bugCreatedBy,\r\n                bugAssignedTo,\r\n                bugDueDate,\r\n                bugStatus,\r\n                bugSeverity,\r\n                bugReproducableFrequency,\r\n            } = bug; //destructuring\r\n\r\n            let bugAssignedToName = props.userList.filter(user => user.id === parseInt(bugAssignedTo));\r\n            let bugStatusName;\r\n            let bugSeverityName;\r\n            if (bugAssignedToName.length !== 0) {\r\n                bugAssignedToName = (bugAssignedToName[0].firstName + \" \" + bugAssignedToName[0].lastName);\r\n            }\r\n\r\n            if (props.bugStatusStages.length !== 0 && bugStatus) {\r\n                bugStatusName = props.bugStatusStages[parseInt(bugStatus) - 1].status;\r\n            }\r\n\r\n            if (props.bugSeverityLevels.length !== 0 && bugSeverity) {\r\n                bugSeverityName = props.bugSeverityLevels[parseInt(bugSeverity) - 1].SeverityLevel;\r\n            }\r\n\r\n            return (\r\n                <tr key={id}>\r\n                    <td><input className=\"bug_list_view_item bug_list_view_check_box\" type=\"checkbox\" name={`(id=${id})`} onChange={toggleCheckbox} checked={bugsToDelete.includes(`(id=${id})`)}></input></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_id\"><Link to={`/bug/${id}`}>{id}</Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_title\"><Link to={`/bug/${id}`}>{bugTitle}</Link></td>\r\n                    {/* <td className = \"bug_list_view_item bug_list_view_bug_description\">{bugDescription}</td> */}\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_createdDate\"><Link to={`/bug/${id}`}>{bugCreatedDate}</Link></td>\r\n                    {/* <td className = \"bug_list_view_item bug_list_view_bug_createdBy\">{bugCreatedBy}</td> */}\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_assignedTo\"><Link to={`/bug/${id}`}>{bugAssignedToName}</Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_dueDate\"><Link to={`/bug/${id}`}>\r\n                        {bugDueDate == '0001-01-01'\r\n                            ? 'None'\r\n                            : bugDueDate\r\n                        }\r\n                    </Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_status\"><Link to={`/bug/${id}`}>{bugStatusName}</Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_severity\"><Link to={`/bug/${id}`}>{bugSeverityName}</Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_reproducibleFrequency\"><Link to={`/bug/${id}`}>{bugReproducableFrequency}</Link></td>\r\n                </tr>\r\n            )\r\n        }\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <table id=\"bug_list_view_table\">\r\n                <thead>\r\n                    <tr key={0}>\r\n                        <th><input className=\"bug_list_view_item bug_list_view_check_box\" type=\"checkbox\" name=\"mainCheckAll\" onChange={toggleAllCheckBoxes} checked={bugsToDelete.length === props.bugList.length}></input></th>\r\n                        <BugListViewHeader\r\n                            headerInfo={props.bugList[0]}\r\n                            bugList={props.bugList}\r\n                            setBugList={props.setBugList}\r\n                        />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {listBugs()}\r\n                </tbody>\r\n            </table>\r\n            {bugsToDelete.length > 0 && <div><input onClick={deleteBugs} type=\"button\" value=\"DELETE\"></input></div>}\r\n        </div>\r\n    );\r\n}\r\n","async function checkLoginInfo(userData, callBackResponse) {\r\n    var request = require('request');\r\n    const {\r\n        email = '', pwd = ''\r\n    } = userData;\r\n    console.log(`email ${email} ${pwd}`);\r\n\r\n    request({\r\n        method: 'POST',\r\n        url: 'https://bigbug-365ff5.appdrag.site/api/users/login',\r\n        form: {\r\n            \"email\": email,\r\n            \"pwd\": pwd,\r\n            \"AD_PageNbr\": \"1\",\r\n            \"AD_PageSize\": \"500\"\r\n        }\r\n    }, function (err, httpResponse, body) {\r\n        let result = JSON.parse(body);\r\n        if (result.Table.length !== 0) {\r\n            console.log(\"Welcome \" + result.Table[0].firstName);\r\n            callBackResponse(result.Table[0]);\r\n        } else {\r\n            console.log(\"No data returned\");\r\n            callBackResponse(-1);\r\n        }\r\n    });\r\n}\r\n\r\nasync function register(userData, callBackResponse) {\r\n    var request = require('request');\r\n\r\n    request({\r\n        method: 'POST',\r\n        url: 'https://bigbug-365ff5.appdrag.site/api/users/register',\r\n        form: {\r\n            \"firstName\": userData.firstName,\r\n            \"lastName\": userData.lastName,\r\n            \"email\": userData.email,\r\n            \"pwd\": userData.pwd,\r\n            \"phone\": userData.phone\r\n        }\r\n    }, function (err, httpResponse, body) {\r\n        console.log(body);\r\n        let result = JSON.parse(body);\r\n        callBackResponse(result.affectedRows);\r\n    });\r\n}\r\n\r\nvar request = require('request');\r\n\r\nfunction getUsersCB() {\r\n    return new Promise(function (resolve, reject) {\r\n        request({\r\n            method: 'POST',\r\n            url: 'https://bigbug-365ff5.appdrag.site/api/users/getUsers',\r\n            form: {\r\n                \"AD_PageNbr\": \"1\",\r\n                \"AD_PageSize\": \"500\"\r\n            }\r\n        }, function (err, httpResponse, body) {\r\n            if (err != null) {\r\n                resolve(err);\r\n            } else {\r\n                let result = JSON.parse(body).Table;\r\n                resolve(result);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n// async function getHello(cb) {\r\n//     var request = require('request');\r\n//     // console.log(\"in getHello\");\r\n\r\n//     request({\r\n//         method: 'POST',\r\n//         url: 'https://bigbug-365ff5.appdrag.site/api/hash-bcrypt',\r\n//         form: {\r\n//             \"hash\": \"12345\"\r\n//         }\r\n//     }, function (err, httpResponse, body) {\r\n//         let result = JSON.parse(body);\r\n//         // console.log(result.payload);\r\n//         cb(result.payload);\r\n//     });\r\n// }\r\n\r\nexport {\r\n    // getHello,\r\n    checkLoginInfo,\r\n    register,\r\n    getUsersCB\r\n}","// https://stackoverflow.com/questions/36683770/how-to-get-the-value-of-an-input-field-using-reactjs\r\n\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as dbUser from \"../backend/dbUserRequests.js\";\r\n\r\nimport './Login.css'\r\n\r\n\r\nexport default function Login(props) {\r\n    const [loginError, setLoginError] = useState(false);\r\n\r\n    function allowLogin() {\r\n        return props.currentUserData.email.length > 0 && props.currentUserData.pwd.length > 0;\r\n    }\r\n\r\n    function login() {\r\n        console.log(\"login request\");\r\n        let callBackResponse = data => {\r\n            console.log(\"Data received from CallBack = \", data);\r\n            // props.setCurrentUserData({ email: \"\", pwd: \"\" });\r\n            if (data === -1) {\r\n                setLoginError(true);\r\n            } else {\r\n                // debugger;\r\n                setLoginError(false);\r\n                props.setCurrentUserData(data);\r\n                props.setIsAuthenticated (true);\r\n            }\r\n        }\r\n        dbUser.checkLoginInfo(props.currentUserData, callBackResponse);\r\n    }\r\n\r\n    function handleInput(target) {\r\n        const { name, value } = target;\r\n        props.setCurrentUserData({ ...props.currentUserData, [name]: value });\r\n    }\r\n\r\n    return (\r\n        <div id=\"login\">\r\n            <div id=\"loginContainer\">\r\n                {loginError && <div className=\"error bold-font\">Incorrect login. Please check your details and try again.</div>}\r\n                <div>\r\n                    <label htmlFor=\"loginEmail\">Email:</label>\r\n                    <input\r\n                        onChange={e => handleInput(e.target)} id=\"loginEmail\" type=\"text\" name=\"email\" value={props.currentUserData.email} autoFocus></input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"loginPassword\">Password:</label>\r\n                    <input onChange={e => handleInput(e.target)} id=\"loginPassword\" type=\"password\" name=\"pwd\" value={props.currentUserData.pwd}></input>\r\n                </div>\r\n                { allowLogin()\r\n                ? <input id=\"loginButton\" className=\"button\" onClick={login} type=\"button\" value=\"Login\"></input>\r\n                : <input id=\"loginDisabled\" className=\"button\" type=\"button\" value=\"Login\"></input>\r\n                }\r\n                \r\n                <Link to=\"/register\"><input id=\"registerButton\" className=\"button\" type=\"button\" value=\"Register\"></input></Link>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as db from '../backend/dbUserRequests.js';\r\n\r\nimport './Register.css';\r\n\r\nexport default function Register(props) {\r\n    const [userData, setUserData] = useState(\"\");\r\n    function register(e) {\r\n        console.log(\"register request\", e);\r\n        console.log(userData);\r\n        let callBackResponse = data => {\r\n            console.log(\"Data received from CallBack = \", data);\r\n        }\r\n        db.register(userData, callBackResponse);\r\n    }\r\n\r\n    const handleInput = e => {\r\n        const { name, value } = e.target;\r\n        // console.log (`name ${name} value ${value}`);\r\n        setUserData(oldState => ({ ...oldState, [name]: value }))\r\n    }\r\n\r\n    return (\r\n        <div id=\"register\">\r\n            <div id=\"registerContainer\">\r\n                <div className=\"flex-even\">\r\n                    <input className=\"btn\" onInput={handleInput} name=\"firstName\" type=\"text\" placeholder=\"First Name\"></input>\r\n                    <input className=\"btn\" onInput={handleInput} name=\"lastName\" type=\"text\" placeholder=\"Last Name\"></input>\r\n                </div>\r\n                <div className=\"flex-even\">\r\n                    <input className=\"btn\" onInput={handleInput} name=\"email\" type=\"email\" placeholder=\"Email\"></input>\r\n                    <input className=\"btn\" onInput={handleInput} name=\"pwd\" type=\"password\" placeholder=\"Password\"></input>\r\n                </div>\r\n                <div className=\"flex-even\">\r\n                    <span></span>\r\n                    <input className=\"btn\" onInput={handleInput} name=\"pwdConfirm\" type=\"password\" placeholder=\"Confirm Password\"></input>\r\n                </div>\r\n                <input className=\"btn\" onInput={handleInput} name=\"phone\" type=\"text\" placeholder=\"Phone\"></input>\r\n                <div className=\"flex-even\">\r\n                    <Link to=\"/\"><input className=\"btn\" type=\"button\" value=\"Back\"></input></Link>\r\n                    <input className=\"btn\" onClick={() => register()} type=\"button\" value=\"Create Account\"></input>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport * as dbBugs from '../backend/dbBugRequests.js';\r\nimport * as dbUsers from '../backend/dbUserRequests';\r\nimport BugListView from './BugListView.jsx';\r\n\r\nexport default function Dashboard(props) {\r\n\r\n    const callBack = bugList => { props.setBugList(bugList); }\r\n\r\n    const generateUserList = async () => {\r\n        let list = await dbUsers.getUsersCB();\r\n        list.unshift({id: 0, firstName: \"Unassigned\", lastName: \"\", email: \"\"});\r\n        props.setUserList(list);\r\n    }\r\n\r\n    const usersCallback = userList => { props.setUserList(userList); }\r\n\r\n    useEffect(() => {\r\n        dbBugs.getAllBugs(callBack);\r\n        generateUserList();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <BugListView \r\n                bugList={props.bugList} \r\n                setBugList={props.setBugList} \r\n                userList={props.userList}\r\n                bugStatusStages={props.bugStatusStages}\r\n                bugSeverityLevels={props.bugSeverityLevels}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","//https://medium.com/@andrewmyint/infinite-loop-inside-useeffect-react-hooks-6748de62871\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport * as dbUsers from '../backend/dbUserRequests';\r\n\r\nexport default function SelectUser(props) {\r\n    // console.log (\"SelectUser user = \" + props.user);\r\n\r\n    const showList = () => {\r\n        return props.userList.map (el => <option key={el.id} value={el.id}>{el.firstName} {el.lastName}</option>)\r\n    }\r\n\r\n    const handleChange = e => {\r\n        props.onChange(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <select value={props.user} onChange={handleChange}>\r\n            {showList()}\r\n        </select>\r\n    )\r\n}\r\n","import React from 'react';\n\nexport default function SelectBugSeverityLevel(props) {\n    const showList = () => {\n        return props.bugSeverityLevels.map ( el => <option key={el.id} value={el.id}>{el.SeverityLevel}</option>)\n    }\n\n    const handleChange = e => {\n        console.log(\"SelectBugSeverity: handleChange: \",e.target.value);\n        props.onChange(e.target.value);\n    }\n    return (\n        <>\n        <label htmlFor=\"bugSeverity\">Severity:</label>\n        <select id=\"bugSeverity\" value={props.bugSeverity} onChange={handleChange}>\n            {showList()}\n        </select>\n        </>\n    )\n}\n","import React from 'react';\n\nexport default function SelectBugStatus(props) {\n    const showList = () => props.bugStatusStages.map( el => <option id={el.id} value={el.id}>{el.status}</option>)\n    const handleChange = e => props.onChange(e.target.value);\n    return (\n        <>\n            <label htmlFor=\"bugStatus\">Status:</label>\n            <select id=\"bugStatus\" value={props.bugStatus} onChange={handleChange}>\n                {showList()}\n            </select>\n        </>\n    )\n}\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SelectUser from './SelectUser';\r\nimport SelectBugSeverityLevel from './SelectBugSeverityLevel';\r\nimport SelectBugStatus from './SelectBugStatus';\r\nimport * as db from '../backend/dbBugRequests';\r\n\r\nimport './CreateBug.css';\r\n\r\nexport default function CreateBug(props) {\r\n\r\n    function resetBugFields() {\r\n        return (\r\n            {\r\n                bugTitle: \"\",\r\n                bugDescription: \"\",\r\n                bugCreatedDate: new Date().toISOString().split('T')[0],\r\n                bugCreatedBy: \"\",\r\n                bugAssignedTo: \"0\",\r\n                bugDueDate: \"\",\r\n                bugStatus: \"1\",\r\n                bugSeverity: \"1\",\r\n                bugReproducableFrequency: \"\"\r\n            }\r\n        );\r\n    }\r\n    const [newBug, setNewBug] = useState(resetBugFields());\r\n    const [submitMessage, setSubmitMessage] = useState({ message: \"Enter New Bug Details\", messageType: \"success\", show: true });\r\n\r\n    const handleInput = e => {\r\n        const { name, value } = e.target; // destructuring\r\n        setNewBug({ ...newBug, [name]: value });\r\n    }\r\n\r\n    const callback = result => {\r\n        if (result === '1') {\r\n            setSubmitMessage({ message: \"New bug successfully entered.\", messageType: \"success\", show: true });\r\n            setNewBug(resetBugFields());\r\n        } else {\r\n            setSubmitMessage({ message: `Error creating bug. (${result})`, messageType: \"failure\", show: true });\r\n        }\r\n    }\r\n\r\n    const submitBug = e => {\r\n        e.preventDefault();\r\n        db.submitBug(newBug, callback);\r\n    }\r\n\r\n    return (\r\n        <div id=\"CreateBugForm\">\r\n            {submitMessage.show && <h1>{submitMessage.message}</h1>}\r\n            <form onSubmit={submitBug}>\r\n                <div>\r\n                    <label htmlFor=\"bugTitle\">Title:</label>\r\n                    <input onChange={handleInput} type=\"text\" id=\"bugTitle\" name=\"bugTitle\" value={newBug.bugTitle}></input>\r\n                </div>\r\n                <div>\r\n                    <div><label htmlFor=\"bugDescription\">Description:</label></div>\r\n                    <textarea onChange={handleInput} id=\"bugDescription\" name=\"bugDescription\" value={newBug.bugDescription}></textarea>\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <div>\r\n                        <label htmlFor=\"bugCreatedDate\">Creation Date:</label>\r\n                        <input onChange={handleInput} type=\"text\" id=\"bugCreatedDate\" name=\"bugCreatedDate\" value={newBug.bugCreatedDate}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"bugCreatedBy\">Created By:</label>\r\n                        {/* TODO - user is logged in user */}\r\n                        <SelectUser user={2} userList={props.userList} onChange={ user => setNewBug( {...newBug, bugCreatedBy:user})} />\r\n                        {/* <input onChange={handleInput} type=\"text\" id=\"bugCreatedBy\" name=\"bugCreatedBy\" value={newBug.bugCreatedBy}></input> */}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"bugAssignedTo\">Assigned To:</label>\r\n                        {/* <input onChange={handleInput} type=\"text\" id=\"bugAssignedTo\" name=\"bugAssignedTo\" value={newBug.bugAssignedTo}></input> */}\r\n                        <SelectUser userList={props.userList} onChange={ user => setNewBug( {...newBug, bugAssignedTo:user})} />\r\n                    </div>\r\n                    {/* <div>\r\n                        <label htmlFor=\"bugAssignedTo\">Assigned To:</label>\r\n                        <input onChange={handleInput} type=\"text\" id=\"bugAssignedTo\" name=\"bugAssignedTo\" value={newBug.bugAssignedTo}></input>\r\n                    </div> */}\r\n                    <div>\r\n                        <label htmlFor=\"bugDueDate\">Due Date:</label>\r\n                        <input onChange={handleInput} type=\"date\" id=\"bugDueDate\" name=\"bugDueDate\" value={newBug.bugDueDate}></input>\r\n                    </div>\r\n                </div>\r\n                <SelectBugStatus bugStatusStages={props.bugStatusStages} bugStatus={newBug.bugStatus} onChange={ status => setNewBug({...newBug, bugStatus: status})}/>\r\n                {/* <label htmlFor=\"bugStatus\">Status:</label> */}\r\n                {/* <input onChange={handleInput} type=\"text\" id=\"bugStatus\" name=\"bugStatus\" value={newBug.bugStatus}></input> */}\r\n                {/* <label htmlFor=\"bugSeverity\">Severity:</label> */}\r\n                {/* <input onChange={handleInput} type=\"text\" id=\"bugSeverity\" name=\"bugSeverity\" value={newBug.bugSeverity}></input> */}\r\n                <SelectBugSeverityLevel onChange={bugLevel => setNewBug({...newBug, bugSeverity: bugLevel})} bugSeverityLevels={props.bugSeverityLevels} bugSeverity={newBug.bugSeverity}/>\r\n                <label htmlFor=\"bugReproducibleFrequency\">Reproducible Frequency:</label>\r\n                <input onChange={handleInput} type=\"text\" id=\"bugReproducibleFrequency\" name=\"bugReproducibleFrequency\" value={newBug.bugReproducableFrequency}></input>\r\n                <div className=\"flex-right\">\r\n                    <Link to=\"/\">\r\n                        <input className=\"btn\" type=\"button\" value=\"Cancel\" />\r\n                    </Link>\r\n                    <input className=\"btn\" type=\"submit\" value=\"Submit New Bug\"></input>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport SelectUser from './SelectUser';\r\nimport SelectBugSeverityLevel from './SelectBugSeverityLevel';\r\nimport SelectBugStatus from './SelectBugStatus';\r\nimport * as dbBugs from '../backend/dbBugRequests';\r\n\r\nexport default function EditBug(props) {\r\n    function resetBugFields() {\r\n        return (\r\n            {\r\n                id: \"\",\r\n                bugTitle: \"\",\r\n                bugDescription: \"\",\r\n                bugCreatedDate: \"\",\r\n                bugCreatedBy: \"\",\r\n                bugAssignedTo: \"\",\r\n                bugDueDate: \"\",\r\n                bugStatus: \"\",\r\n                bugSeverity: \"\",\r\n                bugReproducableFrequency: \"\"\r\n            }\r\n        );\r\n    }\r\n\r\n    const [submitMessage, setSubmitMessage] = useState({ message: \"Edit Bug Details\", messageType: \"success\", show: true });\r\n    const [newBug, setNewBug] = useState(resetBugFields());\r\n\r\n    let { id } = useParams();\r\n\r\n    const callback = response => {\r\n        console.log(response);\r\n        const bugDueDate = response.bugDueDate === '0001-01-01' ? \"\" : response.bugDueDate;\r\n        setNewBug({\r\n            id: response.id,\r\n            bugTitle: response.bugTitle,\r\n            bugDescription: response.bugDescription,\r\n            bugCreatedDate: response.bugCreatedDate,\r\n            bugCreatedBy: response.bugCreatedBy,\r\n            bugAssignedTo: response.bugAssignedTo,\r\n            bugDueDate: bugDueDate,\r\n            bugStatus: response.bugStatus,\r\n            bugSeverity: response.bugSeverity,\r\n            bugReproducableFrequency: response.bugReproducableFrequency\r\n        });\r\n    }\r\n    if (newBug.id === '') { dbBugs.getBug(id, callback); }\r\n\r\n    // console.log (\"EditBug user = \" + newBug.bugAssignedTo);\r\n    // console.log(\"EditBug bugSeverityLevels \", props.bugSeverityLevels);\r\n\r\n    const handleInput = e => {\r\n        const { name, value } = e.target; // destructuring\r\n        setNewBug({ ...newBug, [name]: value });\r\n    }\r\n\r\n    const updateCallback = response => {\r\n        console.log(\"update callback: \" + response);\r\n    }\r\n\r\n    const updateBug = () => {\r\n        dbBugs.updateBug(newBug, updateCallback);\r\n    }\r\n\r\n    const deleteCallback = response => {\r\n        console.log(response);\r\n    }\r\n\r\n    const deleteBug = () => {\r\n        let SQL = `(id = ${id})`;\r\n        console.log(`SQL = ${SQL}`);\r\n        dbBugs.deleteBugs(SQL, deleteCallback);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"CreateBugForm\">\r\n                {submitMessage.show && <h1>{submitMessage.message}</h1>}\r\n                <form onSubmit={updateBug}>\r\n                    <div>\r\n                        <label htmlFor=\"bugTitle\">Title:</label>\r\n                        <input onChange={handleInput} type=\"text\" id=\"bugTitle\" name=\"bugTitle\" value={newBug.bugTitle}></input>\r\n                    </div>\r\n                    <div>\r\n                        <div><label htmlFor=\"bugDescription\">Description:</label></div>\r\n                        <textarea onChange={handleInput} id=\"bugDescription\" name=\"bugDescription\" value={newBug.bugDescription}></textarea>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <div>\r\n                            <label htmlFor=\"bugCreatedDate\">Creation Date:</label>\r\n                            <input onChange={handleInput} type=\"date\" id=\"bugCreatedDate\" name=\"bugCreatedDate\" value={newBug.bugCreatedDate}></input>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"bugCreatedBy\">Created By:</label>\r\n                            <SelectUser user={newBug.bugCreatedBy} userList={props.userList} onChange={ user => setNewBug({...newBug, bugCreatedBy: user})} />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"bugAssignedTo\">Assigned To:</label>\r\n                            <SelectUser user={newBug.bugAssignedTo} userList={props.userList} onChange={user => setNewBug({ ...newBug, bugAssignedTo: user })} />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"bugDueDate\">Due Date:</label>\r\n                            <input onChange={handleInput} type=\"date\" id=\"bugDueDate\" name=\"bugDueDate\" value={newBug.bugDueDate}></input>\r\n                        </div>\r\n                    </div>\r\n                    <SelectBugStatus bugStatusStages={props.bugStatusStages} bugStatus={newBug.bugStatus} onChange={ newStatus => setNewBug({...newBug, bugStatus: newStatus})} />\r\n                    <SelectBugSeverityLevel onChange={bugLevel => setNewBug({...newBug, bugSeverity: bugLevel})} bugSeverityLevels={props.bugSeverityLevels} bugSeverity={newBug.bugSeverity}/>\r\n                    <label htmlFor=\"bugReproducibleFrequency\">Reproducible Frequency:</label>\r\n                    <input onChange={handleInput} type=\"text\" id=\"bugReproducibleFrequency\" name=\"bugReproducableFrequency\" value={newBug.bugReproducableFrequency}></input>\r\n                    <div className=\"flex-right\">\r\n                        <Link to=\"/\">\r\n                            <input className=\"btn\" type=\"button\" value=\"Cancel\" />\r\n                        </Link>\r\n                        <Link to=\"/\">\r\n                            <input onClick={deleteBug} className=\"btn\" type=\"button\" value=\"Delete\" />\r\n                        </Link>\r\n                        <Link to=\"/\">\r\n                            <input onClick={updateBug} className=\"btn\" type=\"button\" value=\"Update Bug\"></input>\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// https://dev.to/abdulbasit313/an-easy-way-to-create-a-customize-dynamic-table-in-react-js-3igg\r\n// https://www.youtube.com/watch?v=ri5Nqe_IK50\r\n// https://medium.com/allenhwkim/mobile-friendly-table-b0cb066dbc0e\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\"\r\nimport Header from './components/Header';\r\nimport Sidebar from './components/Sidebar';\r\nimport BugListView from './components/BugListView';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport Dashboard from './components/Dashboard';\r\nimport CreateBug from './components/CreateBug';\r\nimport EditBug from './components/EditBug';\r\nimport * as dbBugs from '../src/backend/dbBugRequests';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n  const [currentUserData, setCurrentUserData] = useState({ email: \"\", pwd: \"\" });\r\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\r\n  const [bugList, setBugList] = useState([{id:''}]);  // default id to prevent \"unique key prop\" error\r\n  const [userList, setUserList] = useState([]);\r\n  const [bugSeverityLevels, setBugSeverityLevels] = useState([]);\r\n  const [bugStatusStages, setBugStatusStages] = useState([]);\r\n\r\n\r\n  // function checkIfAuthenticated() {\r\n  //   fetch(\"http://localhost:4000/user\").then( x =>\r\n  //     x.json().then( y => {\r\n  //     setIsAuthenticated(true);\r\n  //     // How to get Current User in React from JWT Cookie\r\n  //     // https://www.youtube.com/watch?v=jsaOTcBe-dM\r\n  //     setCurrentUserData( {} );\r\n  //     setLoading(false);\r\n  //     })\r\n  //   );\r\n  // }\r\n\r\n  // useEffect( () => {\r\n  //   console.log(\"App: useEffect\");\r\n  //   checkIfAuthenticated();\r\n  // }, []);\r\n\r\n  if (bugSeverityLevels.length === 0) {\r\n    dbBugs.getBugSeverityLevels(async (levels) => {\r\n      setBugSeverityLevels(levels);\r\n    });\r\n  }\r\n\r\n  if (bugStatusStages.length === 0) {\r\n    dbBugs.getBugStatusStages(async (stages) => {\r\n      setBugStatusStages(stages);\r\n    });\r\n  }\r\n\r\n  const logout = () => {  // TODO - SPA authentification\r\n    // https://dev.to/rdegges/please-stop-using-local-storage-1i04\r\n    // https://medium.com/@jcbaey/authentication-in-spa-reactjs-and-vuejs-the-right-way-e4a9ac5cd9a3\r\n    // https://jcbaey.com/authentication-in-spa-reactjs-and-vuejs-the-right-way?utm_source=medium&utm_campaign=spa-authentication\r\n\r\n    console.log(\"App: logging out\");\r\n    setIsAuthenticated(false);\r\n    localStorage.setItem('userInfo', {'firstName': 'default', 'lastName': 'user'});\r\n  }\r\n\r\n  // if (loading) {\r\n  //   // return <div>Loading...</div>\r\n  // }\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      <Router>\r\n      <Header \r\n        isAuthenticated={isAuthenticated} \r\n        logout={ () => logout() }\r\n        setIsAuthenticated={ authenticated => setIsAuthenticated(authenticated)} // enable user to log out\r\n        currentUserData={currentUserData} \r\n      />\r\n      { isAuthenticated\r\n        ? null\r\n        : <Login currentUserData={currentUserData} setCurrentUserData={ newData => {setCurrentUserData(newData)}} setIsAuthenticated={ newState => setIsAuthenticated(newState)} />\r\n      }\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            { isAuthenticated\r\n            // ? <CreateBug bugList={bugList} setBugList ={ newList => setBugList(newList)}/>\r\n            ? <Dashboard \r\n                bugList={bugList} \r\n                setBugList= { newList => setBugList(newList)} \r\n                userList={userList} \r\n                setUserList={ users => setUserList(users)}\r\n                bugSeverityLevels={bugSeverityLevels}\r\n                bugStatusStages={bugStatusStages}\r\n                />\r\n               : null\r\n            // : <Login currentUserData={currentUserData} setCurrentUserData={ newData => {setCurrentUserData(newData)}} setIsAuthenticated={ newState => setIsAuthenticated(newState)} />\r\n            }\r\n\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <Register />\r\n          </Route>\r\n          <Route path=\"/createBug\">\r\n            <CreateBug \r\n              // currentUser={}\r\n              userList={userList} \r\n              bugSeverityLevels={bugSeverityLevels} \r\n              bugStatusStages={bugStatusStages}\r\n            />\r\n          </Route>\r\n          <Route path=\"/bug/:id\">\r\n            {/* <Sidebar /> */}\r\n            <EditBug \r\n              userList={userList} \r\n              bugSeverityLevels={bugSeverityLevels} \r\n              bugStatusStages={bugStatusStages}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}