{"version":3,"sources":["components/Header.jsx","backend/dbUserRequests.js","components/Login.jsx","components/UserDataField.jsx","components/UserPwdField.jsx","components/UserDetails.jsx","backend/dbBugRequests.js","components/BugListViewHeader.jsx","components/BugListView.jsx","components/Dashboard.jsx","components/SelectUser.jsx","components/SelectBugSeverityLevel.jsx","components/SelectBugReproducibility.jsx","components/SelectBugStatus.jsx","components/CloseWindowButton.jsx","components/SuccessWindow.jsx","components/EditBug.jsx","components/Error.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","currentUserData","firstName","lastName","isAuthenticated","id","to","style","textDecoration","className","onClick","window","print","aria-hidden","marginTop","logout","type","request","require","checkLoginInfoPromise","userData","Promise","resolve","reject","email","pwd","method","url","form","err","httpResponse","body","result","JSON","parse","Table","length","console","log","register","callBackResponse","a","async","phone","affectedRows","updateUser","data","cb","newPwd","checkUniqueEmailPromise","Login","useState","loginError","setLoginError","showPwd","setShowPwd","htmlElRef","useRef","current","focus","useFocus","inputRef","setInputFocus","allowLogin","login","dbUser","then","res","setCurrentUserData","setIsAuthenticated","handleInput","target","name","value","handleKeypress","e","key","htmlFor","onChange","onKeyPress","autoFocus","ref","UserDataField","errorMsgs","field","hasAutoFocus","isDisabled","children","onInput","disabled","UserPwdField","pwdStrengh","checkPwdStrength","showPwdStengthBar","showPwds","toggleShowPwd","Register","setUserData","landingPage","setErrorMsgs","setShowPwds","history","useHistory","isRegisterPage","location","pathname","useEffect","oldState","isValidEmail","test","strongPasswordRegex","RegExp","mediumPasswordRegex","lowPasswordRegex","checkEmail","hasOwnProperty","dbUsers","isUnique","checkUserData","sourcePwdField","newErrorMsgs","validLoginData","checkPasswordQuality","pwdConfirm","isValidPhone","width","justifyContent","preventDefault","hasAllUserData","push","update","deleteBugs","idList","response","sortDirection","previousSortColumnName","BugListViewHeader","bugListViewKeys","label","Object","keys","headerInfo","filter","show","map","keyName","indexOf","index","setBugList","sortColumnName","dataType","bugList","newSort","sort","b","comparison","toLowerCase","sortStringColumn","sortNumberColumn","sortColumn","class","toUpperCase","BugListView","bugsToDelete","setBugsToDelete","toggleCheckbox","checked","el","deleteCallback","masterCheckbox","checkAllItems","bug","bugStatusName","bugSeverityName","bugReproducibilityOptionName","bugTitle","bugCreatedDate","bugAssignedTo","bugDueDate","bugStatus","bugSeverity","bugReproducibility","bugAssignedToName","userList","user","parseInt","bugStatusStages","status","bugSeverityLevels","SeverityLevel","bugReproducibilityOptions","includes","SQL","join","dbBugs","Dashboard","callBack","list","unshift","setUserList","generateUserList","SelectUser","SelectBugSeverityLevel","SelectBugReproducibility","SelectBugStatus","SuccessWindow","setShow","setCancelTimeout","timeout","message","success","cancelTimeout","setTimeout","clearTimeout","EditBug","isCreateBug","useLocation","resetBugFields","bugDescription","Date","toISOString","split","bugCreatedBy","messageType","submitMessage","successMessage","setSuccessMessage","newBug","setNewBug","isCreateBugState","setisCreateBugState","useParams","updateCallback","submitBugCallback","padding","rows","newStatus","bugLevel","Error","App","setBugSeverityLevels","setBugStatusStages","setBugReproducibilityOptions","levels","stages","options","localStorage","setItem","authenticated","exact","path","newList","users","newData","newState","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae426a88.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import menuHamburger from '../img/menu-hamburger.png'\r\n\r\nimport './Header.css';\r\n// import '../img/menu-hamburger.png'\r\nexport default function Header(props) {\r\n    const { firstName =\"Default\", lastName = \"User\"} = props.currentUserData;\r\n\r\n    return (\r\n        <header>\r\n            {props.isAuthenticated\r\n                ? <div id=\"headerContainer\">\r\n                    <div id=\"userName\">Welcome, {firstName} {lastName}</div>\r\n                    <div id=\"headerMenu\">\r\n                        <Link to=\"/\" style={{ textDecoration: 'none' }}><div className=\"headerItem\">Dashboard</div></Link>\r\n                        <Link to=\"/createBug\" style={{ textDecoration: 'none' }}><div className=\"headerItem\">Create Bug</div></Link>\r\n                        <Link to=\"#\"><i onClick={() => window.print()} className=\"fa fa-print headerItem\" aria-hidden=\"true\"></i></Link>\r\n                        <Link to=\"/settings\" style={{ textDecoration: 'none' }}><i className=\"fa fa-cog headerItem\" style={{ marginTop: '5px' }}></i></Link>\r\n                        <Link to=\"/\" style={{ textDecoration: 'none' }}><div className=\"headerItem\"><span onClick={props.logout} type=\"text\" >Logout</span></div></Link>\r\n                    </div>\r\n                </div>\r\n                : null}\r\n        </header>\r\n\r\n    );\r\n}\r\n","var request = require('request');\r\n\r\n\r\nfunction checkLoginInfoPromise(userData) {\r\n    return new Promise(function (resolve, reject) {\r\n        const {\r\n            email = '', pwd = ''\r\n        } = userData;\r\n        request({\r\n            method: 'POST',\r\n            url: 'https://bigbug-365ff5.appdrag.site/api/users/login',\r\n            form: {\r\n                \"email\": email,\r\n                \"pwd\": pwd,\r\n                \"AD_PageNbr\": \"1\",\r\n                \"AD_PageSize\": \"500\"\r\n            }\r\n        }, function (err, httpResponse, body) {\r\n            if (err != null) {\r\n                resolve(err);\r\n            } else {\r\n                let result = JSON.parse(body);\r\n                if (result.Table.length !== 0) {\r\n                    console.log(\"Welcome \" + result.Table[0].firstName);\r\n                    resolve(result.Table[0]);\r\n                } else {\r\n                    console.log(\"No data returned\");\r\n                    resolve(-1);\r\n                }\r\n            }\r\n        });\r\n    });\r\n}\r\n// var result = await loginCB();\r\n// console.log(result);\r\n\r\n// async function checkLoginInfo(userData, callBackResponse) {\r\n//     var request = require('request');\r\n//     const {\r\n//         email = '', pwd = ''\r\n//     } = userData;\r\n//     console.log(`email ${email} ${pwd}`);\r\n\r\n//     request({\r\n//         method: 'POST',\r\n//         url: 'https://bigbug-365ff5.appdrag.site/api/users/login',\r\n//         form: {\r\n//             \"email\": email,\r\n//             \"pwd\": pwd,\r\n//             \"AD_PageNbr\": \"1\",\r\n//             \"AD_PageSize\": \"500\"\r\n//         }\r\n//     }, function (err, httpResponse, body) {\r\n//         let result = JSON.parse(body);\r\n//         if (result.Table.length !== 0) {\r\n//             console.log(\"Welcome \" + result.Table[0].firstName);\r\n//             callBackResponse(result.Table[0]);\r\n//         } else {\r\n//             console.log(\"No data returned\");\r\n//             callBackResponse(-1);\r\n//         }\r\n//     });\r\n// }\r\n\r\nasync function register(userData, callBackResponse) {\r\n    var request = require('request');\r\n\r\n    request({\r\n        method: 'POST',\r\n        url: 'https://bigbug-365ff5.appdrag.site/api/users/register',\r\n        form: {\r\n            \"firstName\": userData.firstName,\r\n            \"lastName\": userData.lastName,\r\n            \"email\": userData.email,\r\n            \"pwd\": userData.pwd,\r\n            \"phone\": userData.phone\r\n        }\r\n    }, function (err, httpResponse, body) {\r\n        console.log(body);\r\n        let result = JSON.parse(body);\r\n        callBackResponse(result.affectedRows);\r\n    });\r\n}\r\n\r\nfunction updateUser(data, cb) {\r\n    var request = require('request');\r\n    request({\r\n        method: 'POST',\r\n        url: 'https://bigbug-365ff5.appdrag.site/api/users/updateUser',\r\n        form: {\r\n            \"id\": data.id,\r\n            \"firstName\": data.firstName,\r\n            \"lastName\": data.lastName,\r\n            \"pwd\": data.newPwd ? data.newPwd : data.pwd,\r\n            \"phone\": data.phone\r\n        }\r\n    }, function (err, httpResponse, body) {\r\n        const result = JSON.parse(body).Table;\r\n        console.log(\"update User\", result);\r\n        cb(result);\r\n    });\r\n}\r\n\r\n\r\nfunction checkUniqueEmailPromise(email) {\r\n    return new Promise(function (resolve, reject) {\r\n        request({\r\n            method: 'POST',\r\n            url: 'https://bigbug-365ff5.appdrag.site/api/checkUniqueEmail',\r\n            form: {\r\n                \"email\": email,\r\n                \"AD_PageNbr\": \"1\",\r\n                \"AD_PageSize\": \"500\"\r\n            }\r\n        }, function (err, httpResponse, body) {\r\n            if (err != null) {\r\n                resolve(err);\r\n            } else {\r\n                let result = JSON.parse(body).Table;\r\n                resolve(result);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n// var request = require('request');\r\n\r\nfunction getUsersCB() {\r\n    return new Promise(function (resolve, reject) {\r\n        request({\r\n            method: 'POST',\r\n            url: 'https://bigbug-365ff5.appdrag.site/api/users/getUsers',\r\n            form: {\r\n                \"AD_PageNbr\": \"1\",\r\n                \"AD_PageSize\": \"500\"\r\n            }\r\n        }, function (err, httpResponse, body) {\r\n            if (err != null) {\r\n                resolve(err);\r\n            } else {\r\n                let result = JSON.parse(body).Table;\r\n                resolve(result);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n// async function getHello(cb) {\r\n//     var request = require('request');\r\n//     // console.log(\"in getHello\");\r\n\r\n//     request({\r\n//         method: 'POST',\r\n//         url: 'https://bigbug-365ff5.appdrag.site/api/hash-bcrypt',\r\n//         form: {\r\n//             \"hash\": \"12345\"\r\n//         }\r\n//     }, function (err, httpResponse, body) {\r\n//         let result = JSON.parse(body);\r\n//         // console.log(result.payload);\r\n//         cb(result.payload);\r\n//     });\r\n// }\r\n\r\nexport {\r\n    // getHello,\r\n    checkLoginInfoPromise,\r\n    // checkLoginInfo,\r\n    register,\r\n    updateUser,\r\n    checkUniqueEmailPromise,\r\n    getUsersCB\r\n}\r\n","// https://stackoverflow.com/questions/36683770/how-to-get-the-value-of-an-input-field-using-reactjs\r\n// https://www.freecodecamp.org/forum/t/react-redux-adding-a-handler-for-enter-key-events/241151\r\n\r\nimport React, { useState, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as dbUser from \"../backend/dbUserRequests.js\";\r\n\r\n// import './Login.css'\r\n\r\n\r\nexport default function Login(props) {\r\n    const [loginError, setLoginError] = useState(false);\r\n    const [showPwd, setShowPwd] = useState(false);\r\n\r\n\r\n    // General Focus Hook\r\n    // https://stackoverflow.com/questions/28889826/set-focus-on-input-after-render\r\n    const useFocus = () => {\r\n        const htmlElRef = useRef(null);\r\n        const setFocus = () => { htmlElRef.current && htmlElRef.current.focus() };\r\n\r\n        return [htmlElRef, setFocus];\r\n    }\r\n    const [inputRef, setInputFocus] = useFocus();\r\n\r\n    const toggleShowPwd = () => setShowPwd(current => !current);\r\n\r\n    function allowLogin() {\r\n        return props.currentUserData.email && \r\n            props.currentUserData.email.length > 0 && \r\n            props.currentUserData.pwd && \r\n            props.currentUserData.pwd.length > 0;\r\n    }\r\n\r\n    function login() {\r\n        console.log(\"login request\");\r\n        let callBackResponse = data => {\r\n            console.log(\"Data received from CallBack = \", data);\r\n            if (data === -1) {\r\n                setLoginError(true);\r\n                setInputFocus();\r\n                props.setCurrentUserData({ ...props.currentUserData, \"email\": \"\", \"pwd\": \"\" });\r\n\r\n            } else {\r\n                // debugger;\r\n                setLoginError(false);\r\n                props.setCurrentUserData(data);\r\n                props.setIsAuthenticated(true);\r\n            }\r\n        }\r\n        // dbUser.checkLoginInfo(props.currentUserData, callBackResponse);\r\n        dbUser.checkLoginInfoPromise(props.currentUserData)\r\n            .then( res => { \r\n                console.log(\"after promise with res \", res);\r\n                if (res === -1) {\r\n                    setLoginError(true);\r\n                    setInputFocus();\r\n                    props.setCurrentUserData({ ...props.currentUserData, \"email\": \"\", \"pwd\": \"\" });\r\n    \r\n                } else {\r\n                    // debugger;\r\n                    setLoginError(false);\r\n                    props.setCurrentUserData(res);\r\n                    props.setIsAuthenticated(true);\r\n                }\r\n            })\r\n    }\r\n\r\n    function handleInput(target) {\r\n        const { name, value } = target;\r\n        props.setCurrentUserData({ ...props.currentUserData, [name]: value });\r\n    }\r\n\r\n    function handleKeypress(e) {\r\n        const { key } = e;\r\n        if (key === 'Enter' && allowLogin()) {\r\n            login();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"mainWindow\">\r\n            <div className=\"centeredContainer narrowWindow\">\r\n                {loginError && <div className=\"error-text bold\">Incorrect login. Please check your details and try again.</div>}\r\n                <div className=\"flexColumnContainer\">\r\n                    <label className=\"bold\" htmlFor=\"loginEmail\">Email:</label>\r\n                    <input onChange={e => handleInput(e.target)} onKeyPress={e => handleKeypress(e)} id=\"loginEmail\" className=\"centeredContainerInput\" type=\"text\" name=\"email\" value={props.currentUserData.email || ''} autoFocus ref={inputRef} ></input>\r\n                </div>\r\n                <div className=\"flexColumnContainer\">\r\n                    <label className=\"bold\" htmlFor=\"loginPassword\">Password:</label>\r\n                    <input onChange={e => handleInput(e.target)} onKeyPress={e => handleKeypress(e)} id=\"loginPassword\" className=\"centeredContainerInput\" type={showPwd ? \"text\" : \"password\"} name=\"pwd\" value={props.currentUserData.pwd || ''}></input>\r\n                    <i className={showPwd ? \"fa fa-eye-slash passwordEye\" : \"fa fa-eye passwordEye\"} onClick={() => toggleShowPwd()}></i>\r\n\r\n                </div>\r\n                {allowLogin()\r\n                    ? <input id=\"loginButton\" className=\"centeredContainerButton primaryButton buttonEnabled\" onClick={login} type=\"button\" value=\"Login\"></input>\r\n                    : <input id=\"loginDisabled\" className=\"centeredContainerButton primaryButtonDisabled\" type=\"button\" value=\"Login\"></input>\r\n                }\r\n                <div className=\"flexColumnContainer text-center\">\r\n                    <Link to=\"/register\"><input id=\"registerButton\" className=\"centeredContainerButton tertiaryButton buttonEnabled\" type=\"button\" value=\"Register\"></input></Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\n\nexport default function UserDataField(props) {\n    const { errorMsgs = {}, field = '', value = ''} = props;\n    const hasAutoFocus = props.hasAutoFocus ? true : false;\n    const isDisabled = props.isDisabled ? true : false;\n    return (\n        <div className=\"flexColumnContainer inputFieldPadding\">\n            <label className=\"bold\" htmlFor=\"userDataField\">{props.children}:\n            <span className={errorMsgs[field] ? \"error-text margin-left-30\" : null}>{errorMsgs[field] ? errorMsgs[field] : null}</span>\n            </label>\n            {hasAutoFocus \n            ? <input className=\"centeredContainerInput\" onChange={props.handleInput} onInput={props.handleInput} id=\"userDataField\" name={field} type=\"text\" value={value} autoFocus></input>\n            : isDisabled \n            ? <input className=\"centeredContainerInput\" onChange={props.handleInput} onInput={props.handleInput} id=\"userDataField\" name={field} type=\"text\" value={value} disabled></input>\n            : <input className=\"centeredContainerInput\" onChange={props.handleInput} onInput={props.handleInput} id=\"userDataField\" name={field} type=\"text\" value={value}></input>\n        }\n        </div>\n    )\n}\n","import React from 'react';\n\nexport default function UserPwdField(props) {\n    const { errorMsgs = {}, field, value = '' } = props;\n    const pwdStrengh = props.checkPwdStrength(field);\n    return (\n        <div className=\"flexColumnContainer inputFieldPadding\">\n            <label className=\"bold\" htmlFor=\"UserPwdField\">{props.children}:\n                <span className={errorMsgs[field] ? \"error-text margin-left-30\" : null}>{errorMsgs[field] ? errorMsgs[field] : null}</span>\n                <span className=\"margin-left-30\"></span>\n                {props.showPwdStengthBar && <span className={pwdStrengh}>{pwdStrengh === \"lowPwdStrength\" ? \"(weak)\" : pwdStrengh === \"mediumPwdStrength\" ? \"(okay)\" : pwdStrengh === \"strongPwdStrength\" ? \"(strong)\" : null}</span>}\n            </label>\n            <input className=\"centeredContainerInput\" onChange={props.handleInput} onInput={props.handleInput} id=\"UserPwdField\" name={field} type={props.showPwds[field] ? \"text\" : \"password\"} value={value}></input>\n            <i className={props.showPwds[field] ? \"fa fa-eye-slash passwordEye\" : \"fa fa-eye passwordEye\"} onClick={() => props.toggleShowPwd(field)}></i>\n            {props.showPwdStengthBar && <div className={pwdStrengh}></div>}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect, useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport UserDataField from './UserDataField';\r\nimport UserPwdField from './UserPwdField';\r\nimport * as dbUsers from '../backend/dbUserRequests.js';\r\n\r\nimport './UserDetails.css';\r\n\r\nexport default function Register(props) {\r\n    const [userData, setUserData] = useState(props.currentUserData);\r\n    const { email, pwd, firstName, lastName, phone, landingPage } = userData;  // destructuring\r\n    const [errorMsgs, setErrorMsgs] = useState({});\r\n    const [showPwds, setShowPwds] = useState({});\r\n    const history = useHistory();\r\n    // is this the Register or Settings page\r\n    const isRegisterPage = history.location.pathname === '/register' ? true : false;\r\n\r\n    useEffect( ()=> {\r\n        if (!isRegisterPage) {\r\n            // do not reveal current pwd\r\n            setUserData( oldState => ({...oldState, pwd: ''}));\r\n        }\r\n    },[]);\r\n    const isValidEmail = email => /^.+@.+\\..+$/.test(email);\r\n    // https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/\r\n    const strongPasswordRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#_$%^&*-])(?=.{8,})\");\r\n    const mediumPasswordRegex = new RegExp(\"^(((?=.*[a-z!@#_$%^&*-])(?=.*[A-Z!@#_$%^&*-]))|((?=.*[a-z!@#_$%^&*-])(?=.*[0-9!@#_$%^&*-]))|((?=.*[A-Z!@#_$%^&*-])(?=.*[0-9!@#_$%^&*-])))(?=.{6,})\");\r\n    const lowPasswordRegex = new RegExp(\"^(?=.*[0-9a-zA-Z!@#_$%^&*-])(?=.{3,})\");\r\n\r\n    const isValidPhone = phone => /^(\\([0-9]{3}\\)\\s*|[0-9]{2,3}\\-*)[0-9]{3}-*[0-9]{4}$/.test(phone);\r\n\r\n    async function checkEmail() {\r\n        const { email } = userData;\r\n        // console.log(\"register request\");\r\n        console.log('email = ', email);\r\n        console.log('errorMsgs = ', errorMsgs);\r\n        if (userData.hasOwnProperty('email') && email.length !== 0) {\r\n            console.log(\"is email\");\r\n            console.log(\"valid?\", isValidEmail(email));\r\n            if (isValidEmail(email)) {\r\n                const isUnique = await dbUsers.checkUniqueEmailPromise(email);\r\n                if (isUnique.length === 0) {\r\n                    console.log(\"is unique\", isUnique);\r\n                    // let callBackResponse = data => {\r\n                    //     console.log(\"Data received from CallBack = \", data);\r\n                    // }\r\n                    // dbUsers.register(userData, callBackResponse);\r\n                    return true;\r\n                } else {\r\n                    console.log(\"not unique\", isUnique);\r\n                    setErrorMsgs(current => ({ ...current, email: \"This email address already is registered\" }))\r\n                }\r\n            } else {\r\n                console.log(\"no email\");\r\n                setErrorMsgs(current => ({ ...current, email: \"Not Valid Email\" }))\r\n            }\r\n        } else {\r\n            console.log(\"no email\");\r\n            setErrorMsgs(current => ({ ...current, email: \"No Email\" }))\r\n\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async function isPwdCorrect() {\r\n        return dbUsers.checkLoginInfoPromise(userData)\r\n            .then( res => {\r\n                if (res !== -1) {\r\n                    return true;\r\n                } else {\r\n                    setErrorMsgs(current => ({ ...current, pwd: \"Incorrect Password\" }))\r\n                    return false;\r\n                }\r\n            })\r\n    }\r\n\r\n    const checkPasswordQuality = (sourcePwdField) => userData[sourcePwdField] && userData[sourcePwdField].length > 2;\r\n\r\n    const checkUserData = (sourcePwdField) => {\r\n        let newErrorMsgs = { firstName: '', lastName: '', [sourcePwdField]: '', pwdConfirm: '' };\r\n        let validLoginData = true;\r\n        if (!(firstName && firstName.length >= 2)) {\r\n            newErrorMsgs = ({ ...newErrorMsgs, firstName: \"Name needs to be at least 2 characters.\" });\r\n            validLoginData = false;\r\n        }\r\n        if (!(lastName && lastName.length >= 2)) {\r\n            newErrorMsgs = ({ ...newErrorMsgs, lastName: \"Name needs to be at least 2 characters.\" });\r\n            validLoginData = false;\r\n        }\r\n        if (sourcePwdField === 'pwd' || userData[sourcePwdField] && userData[sourcePwdField].length !== 0) {\r\n            if (!checkPasswordQuality(sourcePwdField)) {\r\n                newErrorMsgs = ({ ...newErrorMsgs, [sourcePwdField]: \"pwd not strong enough\" });\r\n                validLoginData = false;\r\n            } else if (!(userData.pwdConfirm && (userData[sourcePwdField] == userData.pwdConfirm))) {\r\n                newErrorMsgs = ({ ...newErrorMsgs, pwdConfirm: \"pwd doesn't match\" });\r\n                validLoginData = false;\r\n            }\r\n        }\r\n        if (!isValidPhone(phone)) {\r\n            newErrorMsgs = ({...newErrorMsgs, phone: \"Invalid phone number.\"});\r\n            validLoginData = false;\r\n        }\r\n        setErrorMsgs(current => ({ ...current, ...newErrorMsgs }));\r\n        return validLoginData;\r\n    }\r\n\r\n    async function register(e) {\r\n        e.preventDefault();\r\n        let hasAllUserData = checkUserData(\"pwd\");\r\n        if (await checkEmail() && hasAllUserData) {\r\n            let callBackResponse = data => {\r\n                // console.log(\"Data received from CallBack = \", data);\r\n                props.setIsAuthenticated(true);\r\n                props.setCurrentUserData(userData);\r\n                history.push(\"/\");\r\n            }\r\n            dbUsers.register(userData, callBackResponse);\r\n        }\r\n    }\r\n\r\n    async function update(e) {\r\n        e.preventDefault();\r\n        let hasAllUserData = checkUserData(\"newPwd\");\r\n        if (await isPwdCorrect() && hasAllUserData) {\r\n            let callBackResponse = data => {\r\n                // console.log(\"Data received from CallBack = \", data);\r\n                props.setCurrentUserData(oldState => ({...oldState, pwd: userData.newPwd ? userData.newPwd : pwd }));\r\n                history.push(\"/\");\r\n            }\r\n            // console.log(\"Will update settings\");\r\n            dbUsers.updateUser(userData, callBackResponse)\r\n        } else {\r\n            console.log(\"maybe incorrect pwd\");\r\n        }\r\n    }\r\n\r\n    const toggleShowPwd = (target) => setShowPwds(current => ({ ...current, [target]: !current[target] }));\r\n\r\n    const checkPwdStrength = (field) =>\r\n        !(field in userData) ? \"noPwdStrength\"\r\n            : strongPasswordRegex.test(userData[field]) ? \"strongPwdStrength\"\r\n                : mediumPasswordRegex.test(userData[field]) ? \"mediumPwdStrength\"\r\n                    : lowPasswordRegex.test(userData[field]) ? \"lowPwdStrength\"\r\n                        : \"noPwdStrength\"\r\n\r\n    const handleInput = e => {\r\n        const { name, value } = e.target;\r\n        setErrorMsgs(oldState => ({ ...oldState, [name]: '' }))\r\n        setUserData(oldState => {\r\n            return ({ ...oldState, [name]: value })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"userDetailsWindow\">\r\n            <div className=\"centeredContainer\" style={{ width: 'inherit' }}>\r\n                <div className=\"bold\"><h1>{isRegisterPage ? \"Registration Information:\" : \"Update Your Settings:\"}</h1></div>\r\n                <div className=\"flexRowContainer\">\r\n                    <UserDataField field={\"firstName\"} value={firstName} errorMsgs={errorMsgs} handleInput={handleInput} hasAutoFocus={true}>First Name</UserDataField>\r\n                    <UserDataField field={\"lastName\"} value={lastName} errorMsgs={errorMsgs} handleInput={handleInput}>Last Name</UserDataField>\r\n                </div>\r\n                {isRegisterPage\r\n                    ? <UserDataField field={\"email\"} value={email} errorMsgs={errorMsgs} handleInput={handleInput}>Email</UserDataField>\r\n                    : <UserDataField field={\"email\"} value={email} isDisabled={true} handleInput={handleInput}>Email</UserDataField>\r\n\r\n                }\r\n\r\n\r\n                <div className=\"flexRowContainer\">\r\n                    {isRegisterPage\r\n                        ? <UserPwdField field={\"pwd\"} value={userData.pwd} showPwds={showPwds} toggleShowPwd={toggleShowPwd} showPwdStengthBar={true} errorMsgs={errorMsgs} handleInput={handleInput} checkPwdStrength={checkPwdStrength}>Password</UserPwdField>\r\n                        :\r\n                        <>\r\n                            <UserPwdField field={\"pwd\"} value={userData.pwd} showPwds={showPwds} toggleShowPwd={toggleShowPwd} showPwdStengthBar={false} errorMsgs={errorMsgs} handleInput={handleInput} checkPwdStrength={checkPwdStrength}>Confirm Old Password</UserPwdField>\r\n                            <UserPwdField field={\"newPwd\"} value={userData.newPwd} showPwds={showPwds} toggleShowPwd={toggleShowPwd} showPwdStengthBar={true} errorMsgs={errorMsgs} handleInput={handleInput} checkPwdStrength={checkPwdStrength}>New Password</UserPwdField>\r\n                        </>\r\n                    }\r\n                    <UserPwdField field={\"pwdConfirm\"} value={userData.pwdConfirm} showPwds={showPwds} toggleShowPwd={toggleShowPwd} showPwdStengthBar={false} errorMsgs={errorMsgs} handleInput={handleInput} checkPwdStrength={checkPwdStrength}>Confirm Password</UserPwdField>\r\n                </div>\r\n                <UserDataField field={\"phone\"} value={phone} errorMsgs={errorMsgs} handleInput={handleInput}>Phone</UserDataField>\r\n                <div className=\"flexRowContainer hideOnPrint\" style={{ justifyContent: 'center' }}>\r\n                    {/* <Link to=\"/\"><input className=\"centeredContainerButton tertiaryButton buttonEnabled\" style={{ marginTop: '30px', marginRight: '60px', minWidth: '80px' }} type=\"button\" value=\"Back\"></input></Link> */}\r\n                    <Link to=\"/\"><input className=\"centeredContainerButton tertiaryButton buttonEnabled backButton\" type=\"button\" value=\"Back\"></input></Link>\r\n                    <input className=\"centeredContainerButton primaryButton buttonEnabled\" onClick={isRegisterPage ? (e) => register(e) : (e) => update(e)} type=\"button\" value={isRegisterPage ? \"Create Account\" : \"Update Settings\"}></input>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","function submitBug(data, cb) {\r\n  var request = require('request');\r\n\r\n  console.log(\"submitting request\");\r\n  console.log(data);\r\n\r\n  const {\r\n    bugTitle,\r\n    bugDescription,\r\n    bugCreatedDate,\r\n    bugCreatedBy,\r\n    bugAssignedTo,\r\n    bugDueDate,\r\n    bugStatus,\r\n    bugSeverity,\r\n    bugReproducibility\r\n  } = data;\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/submitBug',\r\n    form: {\r\n      \"bugTitle\": bugTitle,\r\n      \"bugDescription\": bugDescription,\r\n      \"bugCreatedDate\": bugCreatedDate,\r\n      \"bugCreatedBy\": bugCreatedBy,\r\n      \"bugAssignedTo\": bugAssignedTo,\r\n      \"bugDueDate\": bugDueDate,\r\n      \"bugStatus\": bugStatus,\r\n      \"bugSeverity\": bugSeverity,\r\n      \"bugReproducibility\": bugReproducibility\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    if (!err) {\r\n      let result = JSON.parse(body).affectedRows;\r\n      cb(result);\r\n    } else {\r\n      console.log(\"submitBug error \", err);\r\n      cb(-1);\r\n    }\r\n  });\r\n}\r\n\r\nasync function getAllBugs(cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/getAllBugs',\r\n    form: {\r\n      \"AD_PageNbr\": \"1\",\r\n      \"AD_PageSize\": \"500\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    if (!err) {\r\n      let result = JSON.parse(body);\r\n      // console.log(result);\r\n      cb(result.Table);\r\n    } else {\r\n      console.log(\"getAllBugs error \", err);\r\n      cb(-1);\r\n    }\r\n  });\r\n}\r\n\r\nfunction getBug(id, cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/getBug',\r\n    form: {\r\n      \"id\": id,\r\n      \"AD_PageNbr\": \"1\",\r\n      \"AD_PageSize\": \"500\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    // console.log(body);\r\n    if (!err) {\r\n      let response = JSON.parse(body);\r\n      cb(response.Table[0]);\r\n    } else {\r\n      console.log(\"getBug error \", err);\r\n      cb(-1);\r\n    }\r\n  });\r\n}\r\n\r\nfunction updateBug(bug, cb) {\r\n  var request = require('request');\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/updateBug',\r\n    form: {\r\n      \"id\": bug.id,\r\n      \"bugTitle\": bug.bugTitle,\r\n      \"bugDescription\": bug.bugDescription,\r\n      \"bugCreatedDate\": bug.bugCreatedDate,\r\n      \"bugCreatedBy\": bug.bugCreatedBy,\r\n      \"bugAssignedTo\": bug.bugAssignedTo,\r\n      \"bugDueDate\": bug.bugDueDate,\r\n      \"bugStatus\": bug.bugStatus,\r\n      \"bugSeverity\": bug.bugSeverity,\r\n      \"bugReproducibility\": bug.bugReproducibility\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    // console.log(\"update request\", body);\r\n    if (!err) {\r\n      let response = JSON.parse(body);\r\n      cb(response.affectedRows);\r\n    }  else {\r\n      console.log (\"updateBug error \", err);\r\n      cb(-1);\r\n    }\r\n  });\r\n}\r\n\r\nfunction deleteBugs(idList, cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/deleteBugs',\r\n    form: {\r\n      \"idList\": idList // \"(id = 5) OR (id = 2)\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    // console.log(body);\r\n    if (!err) {\r\n      let response = JSON.parse(body);\r\n      cb(response);\r\n    } else {\r\n      console.log (\"deleteBugs error \", err);\r\n      cb (-1);\r\n    }\r\n  });\r\n}\r\n\r\nasync function getBugSeverityLevels(cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/getBugSeverityLevels',\r\n    form: {\r\n      \"AD_PageNbr\": \"1\",\r\n      \"AD_PageSize\": \"500\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    if (!err) {\r\n      let response = JSON.parse(body);\r\n      cb(response.Table);\r\n    } else {\r\n      console.log(\"getBugSeverityLevels error: \", err);\r\n      cb(-1);\r\n    }\r\n  });\r\n}\r\n\r\nfunction getBugStatusStages(cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/getBugStatusStages',\r\n    form: {\r\n      \"AD_PageNbr\": \"1\",\r\n      \"AD_PageSize\": \"500\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    if (!err) {\r\n      const response = JSON.parse(body);\r\n      cb(response.Table);\r\n    } else {\r\n      console.log(\"getBugStatusStages error \", err);\r\n      cb(-1);\r\n    }\r\n  });\r\n}\r\n\r\nfunction getBugReproducibilityOptions(cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/getBugReproducibilityOptions',\r\n    form: {\r\n      \"AD_PageNbr\": \"1\",\r\n      \"AD_PageSize\": \"500\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    if (!err) {\r\n      const response = JSON.parse(body);\r\n      cb(response.Table);\r\n    } else {\r\n      console.log(\"getBugReproducibilityOptions error \", err);\r\n      cb(-1);\r\n    }\r\n  });\r\n}\r\n\r\nexport {\r\n  submitBug,\r\n  getAllBugs,\r\n  getBug,\r\n  updateBug,\r\n  deleteBugs,\r\n  getBugSeverityLevels,\r\n  getBugStatusStages,\r\n  getBugReproducibilityOptions\r\n};\r\n","// https://stackoverflow.com/questions/4647817/javascript-object-rename-key\r\nimport React from 'react';\r\n\r\nimport './BugListView.css'\r\n\r\nlet sortDirection = true;\r\nlet previousSortColumnName = '';\r\n\r\nexport default function BugListViewHeader(props) {\r\n   \r\n    const bugListViewKeys = [{\r\n        key: 'id', label: 'Id #'\r\n    }, {\r\n        key: 'bugTitle', label: 'Title'\r\n    }, {\r\n        key: 'bugCreatedDate', label: 'Created On'\r\n    }, {\r\n        key: 'bugAssignedTo', label: 'Assigned To'\r\n    }, {\r\n        key: 'bugDueDate', label: 'Due Date'\r\n    }, {\r\n        key: 'bugStatus', label: 'Status'\r\n    }, {\r\n        key: 'bugSeverity', label: 'Severity'\r\n    }, {\r\n        key: 'bugReproducibility', label: 'Reproducibility'\r\n    }];\r\n    let allKeys = Object.keys(props.headerInfo);\r\n    let keysToShow = allKeys.filter(show => bugListViewKeys.map( keyName => keyName.key ).indexOf(show));\r\n    keysToShow = bugListViewKeys;\r\n    \r\n    return (\r\n        keysToShow.map((key, index) => {\r\n            return <th onClick={() => { props.setBugList(sortColumn(props, key.key)); }}\r\n                key={index}>\r\n                <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                &nbsp;\r\n                {key.label.toUpperCase()}\r\n            </th>\r\n        })\r\n    )\r\n}\r\n\r\nfunction sortStringColumn(a, b, sortColumnName) {\r\n    let comparison = 0;\r\n    if (a[sortColumnName].toLowerCase() > b[sortColumnName].toLowerCase()) {\r\n        comparison = (sortDirection) ? 1 : -1;\r\n    } else if (a[sortColumnName].toLowerCase() < b[sortColumnName].toLowerCase()) {\r\n        comparison = (sortDirection) ? -1 : 1;\r\n    }\r\n    return comparison;\r\n}\r\n\r\nfunction sortNumberColumn(a, b, sortColumnName) {\r\n    let comparison = 0;\r\n    if (a[sortColumnName] > b[sortColumnName]) {\r\n        comparison = (sortDirection) ? 1 : -1;\r\n    } else if (a[sortColumnName] < b[sortColumnName]) {\r\n        comparison = (sortDirection) ? -1 : 1;\r\n    }\r\n    return comparison;\r\n}\r\n\r\nfunction sortColumn(props, sortColumnName) {\r\n    if (previousSortColumnName === sortColumnName) {\r\n        sortDirection = !sortDirection;\r\n    } else {\r\n        sortDirection = true;\r\n        previousSortColumnName = sortColumnName;\r\n    }\r\n\r\n    const dataType = typeof props.bugList[0][sortColumnName];\r\n    let newSort = [...props.bugList];\r\n\r\n    switch (dataType) {\r\n        case 'string':\r\n            newSort.sort((a, b) => sortStringColumn(a, b, sortColumnName));\r\n            break;\r\n        case 'number':\r\n            newSort.sort((a, b) => sortNumberColumn(a, b, sortColumnName));\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return newSort;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BugListViewHeader from './BugListViewHeader';\r\nimport * as dbBugs from '../backend/dbBugRequests';\r\n\r\nimport './BugListView.css'\r\n\r\nexport default function BugListView(props) {\r\n    const [bugsToDelete, setBugsToDelete] = useState([]);\r\n\r\n    const toggleCheckbox = e => {\r\n        const { name, checked } = e.target; // destructuring\r\n        if (checked) {\r\n            setBugsToDelete([...bugsToDelete, name])\r\n        } else {\r\n            setBugsToDelete(bugsToDelete.filter(el => el !== name));\r\n        };\r\n    }\r\n\r\n    const toggleAllCheckBoxes = e => {\r\n        const { checked: masterCheckbox } = e.target;\r\n        console.log(\"master checkbox = \" + masterCheckbox);\r\n        if (masterCheckbox) {\r\n            let checkAllItems = props.bugList.map(el => `(id=${el.id})`);\r\n            setBugsToDelete(checkAllItems);\r\n\r\n        } else {\r\n            setBugsToDelete([]);\r\n        }\r\n    }\r\n\r\n    const deleteCallback = response => {\r\n        console.log(response);\r\n    }\r\n\r\n    const deleteBugs = () => {\r\n        let SQL = bugsToDelete.join(' OR ');\r\n        console.log(SQL);\r\n        dbBugs.deleteBugs(SQL, deleteCallback);\r\n    }\r\n\r\n    const usersCallback = userList => { props.setUserList(userList); }\r\n\r\n\r\n    function listBugs() {\r\n\r\n        return props.bugList.map(bug => {\r\n            const {\r\n                id,\r\n                bugTitle,\r\n                // bugDescription,\r\n                bugCreatedDate,\r\n                // bugCreatedBy,\r\n                bugAssignedTo,\r\n                bugDueDate,\r\n                bugStatus,\r\n                bugSeverity,\r\n                bugReproducibility,\r\n            } = bug; //destructuring\r\n\r\n            let bugAssignedToName = props.userList.filter(user => user.id === parseInt(bugAssignedTo));\r\n            let bugStatusName;\r\n            let bugSeverityName;\r\n            let bugReproducibilityOptionName;\r\n            if (bugAssignedToName.length !== 0) {\r\n                bugAssignedToName = (bugAssignedToName[0].firstName + \" \" + bugAssignedToName[0].lastName);\r\n            }\r\n\r\n            if (props.bugStatusStages.length !== 0 && bugStatus) {\r\n                bugStatusName = props.bugStatusStages[parseInt(bugStatus) - 1].status;\r\n            }\r\n\r\n            if (props.bugSeverityLevels.length !== 0 && bugSeverity) {\r\n                bugSeverityName = props.bugSeverityLevels[parseInt(bugSeverity) - 1].SeverityLevel;\r\n            }\r\n\r\n            if (props.bugReproducibilityOptions.length !== 0 && bugReproducibility) {\r\n                bugReproducibilityOptionName = props.bugReproducibilityOptions[parseInt(bugReproducibility)-1].bugReproducibility;\r\n            }\r\n\r\n            return (\r\n                <tr key={id}>\r\n                    <td><input className=\"bug_list_view_item bug_list_view_check_box\" type=\"checkbox\" name={`(id=${id})`} onChange={toggleCheckbox} checked={bugsToDelete.includes(`(id=${id})`)}></input></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_id\"><Link to={`/bug/${id}`}>{id}</Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_title\"><Link to={`/bug/${id}`}>{bugTitle}</Link></td>\r\n                    {/* <td className = \"bug_list_view_item bug_list_view_bug_description\">{bugDescription}</td> */}\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_createdDate\"><Link to={`/bug/${id}`}>{bugCreatedDate}</Link></td>\r\n                    {/* <td className = \"bug_list_view_item bug_list_view_bug_createdBy\">{bugCreatedBy}</td> */}\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_assignedTo\"><Link to={`/bug/${id}`}>{bugAssignedToName}</Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_dueDate\"><Link to={`/bug/${id}`}>\r\n                        {bugDueDate == '0001-01-01'\r\n                            ? 'None'\r\n                            : bugDueDate\r\n                        }\r\n                    </Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_status\"><Link to={`/bug/${id}`}>{bugStatusName}</Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_severity\"><Link to={`/bug/${id}`}>{bugSeverityName}</Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_reproducibleFrequency\"><Link to={`/bug/${id}`}>{bugReproducibilityOptionName}</Link></td>\r\n                </tr>\r\n            )\r\n        }\r\n        );\r\n    }\r\n    return (\r\n        <div id=\"bug_list_view_table_container\">\r\n            <table id=\"bug_list_view_table\">\r\n                <thead>\r\n                    <tr key={0}>\r\n                        <th><input className=\"bug_list_view_item bug_list_view_check_box\" type=\"checkbox\" name=\"mainCheckAll\" onChange={toggleAllCheckBoxes} checked={bugsToDelete.length === props.bugList.length}></input></th>\r\n                        <BugListViewHeader\r\n                            headerInfo={props.bugList[0]}\r\n                            bugList={props.bugList}\r\n                            setBugList={props.setBugList}\r\n                        />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {listBugs()}\r\n                </tbody>\r\n            </table>\r\n            {bugsToDelete.length > 0 && <div><input onClick={deleteBugs} type=\"button\" value=\"DELETE\"></input></div>}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport * as dbBugs from '../backend/dbBugRequests.js';\r\nimport * as dbUsers from '../backend/dbUserRequests';\r\nimport BugListView from './BugListView.jsx';\r\n\r\nexport default function Dashboard(props) {\r\n\r\n    const callBack = bugList => { props.setBugList(bugList); }\r\n\r\n    const generateUserList = async () => {\r\n        let list = await dbUsers.getUsersCB();\r\n        if (list.length) {\r\n            list.unshift({id: 0, firstName: \"Unassigned\", lastName: \"\", email: \"\"});\r\n        }\r\n        props.setUserList(list);\r\n    }\r\n\r\n    const usersCallback = userList => { props.setUserList(userList); }\r\n\r\n    useEffect(() => {\r\n        dbBugs.getAllBugs(callBack);\r\n        generateUserList();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <BugListView \r\n                bugList={props.bugList} \r\n                setBugList={props.setBugList} \r\n                userList={props.userList}\r\n                bugStatusStages={props.bugStatusStages}\r\n                bugSeverityLevels={props.bugSeverityLevels}\r\n                bugReproducibilityOptions={props.bugReproducibilityOptions}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","//https://medium.com/@andrewmyint/infinite-loop-inside-useeffect-react-hooks-6748de62871\r\n\r\nimport React from 'react';\r\n// import * as dbUsers from '../backend/dbUserRequests';\r\n\r\nexport default function SelectUser(props) {\r\n    // console.log (\"SelectUser user = \" + props.user);\r\n\r\n    const showList = () => {\r\n        return props.userList.map(el => <option key={el.id} value={el.id}>{el.firstName} {el.lastName}</option>)\r\n    }\r\n\r\n    const handleChange = e => {\r\n        props.onChange(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"flexColumnContainer inputFieldPadding\">\r\n            <label className=\"bold\" htmlFor=\"userDataField\">{props.children}:</label>\r\n            <select className=\"centeredContainerInput inputFieldPadding\" value={props.user} onChange={handleChange}>\r\n                {showList()}\r\n            </select>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SelectBugSeverityLevel(props) {\r\n    const showList = () => {\r\n        return props.bugSeverityLevels.map(el => <option key={el.id} value={el.id}>{el.SeverityLevel}</option>)\r\n    }\r\n\r\n    const handleChange = e => {\r\n        // console.log(\"SelectBugSeverity: handleChange: \", e.target.value);\r\n        props.onChange(e.target.value);\r\n    }\r\n    return (\r\n        <div className=\"flexColumnContainer inputFieldPadding\">\r\n            <label htmlFor=\"dataField\">{props.children}:</label>\r\n            <select className=\"centeredContainerInput inputFieldPadding\" id=\"dataField\" value={props.bugSeverity} onChange={handleChange}>\r\n                {showList()}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\n\nexport default function SelectBugReproducibility(props) {\n    const showList = () => {\n        return props.bugReproducibilityOptions.map(el => <option key={el.id} value={el.id}>{el.bugReproducibility}</option>)\n    }\n\n    const handleChange = e => {\n        // console.log(\"SelectBugReproducibility: handleChange: \", e.target.value);\n        props.onChange(e.target.value);\n    }\n    return (\n        <div className=\"flexColumnContainer inputFieldPadding\">\n            <label htmlFor=\"dataField\">{props.children}:</label>\n            <select className=\"centeredContainerInput inputFieldPadding\" id=\"dataField\" value={props.bugReproducibility} onChange={handleChange}>\n                {showList()}\n            </select>\n        </div>\n    )\n}\n","import React from 'react';\r\n\r\nexport default function SelectBugStatus(props) {\r\n    const showList = () => props.bugStatusStages.map( el => <option key={el.id} id={el.id} value={el.id}>{el.status}</option>)\r\n    const handleChange = e => props.onChange(e.target.value);\r\n    return (\r\n        <div className=\"flexColumnContainer inputFieldPadding\">\r\n            <label htmlFor=\"bugStatus\">Status:</label>\r\n            <select className=\"centeredContainerInput\" id=\"bugStatus\" value={props.bugStatus} onChange={handleChange}>\r\n                {showList()}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\n\nimport './CloseWindowButton.css';\n\nexport default function SuccessWindow(props) {\n    const { setShow, setCancelTimeout } = props;\n    return (\n        <div id=\"CloseWindowButton\">\n            <button className=\"centeredContainerButton tertiaryButton buttonEnabled\" onClick={() => {setShow(false); setCancelTimeout(true);}}>OK</button>\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport CloseWindowButton from './CloseWindowButton';\n\nimport './SuccessWindow.css';\nimport { useHistory } from 'react-router-dom';\n\nexport default function SuccessWindow(props) {\n    const { message, success, show, setShow } = props;\n    const [cancelTimeout, setCancelTimeout] = useState (false);\n    let timeout;\n    if (show) {\n        timeout = setTimeout( () => {\n            setShow(false);\n        }, 5000);\n    }\n    if (cancelTimeout) {\n        clearTimeout(timeout);\n        setCancelTimeout(false);\n    }\n    return (\n        <>\n            { show && \n                <div id=\"SuccessWindowContainer\" className={success ? \"success-text bold\" : \"error-text bold\"}>\n                {message}\n                <CloseWindowButton setShow={setShow} setCancelTimeout={setCancelTimeout}/>\n            </div>\n            }\n        </>\n    )\n}\n","import React, { useState } from 'react';\r\nimport { Link, useParams, useLocation, useHistory } from 'react-router-dom';\r\nimport SelectUser from './SelectUser';\r\nimport SelectBugSeverityLevel from './SelectBugSeverityLevel';\r\nimport SelectBugReproducibility from './SelectBugReproducibility';\r\nimport SelectBugStatus from './SelectBugStatus';\r\nimport UserDataField from './UserDataField';\r\nimport SuccessWindow from './SuccessWindow';\r\nimport * as dbBugs from '../backend/dbBugRequests';\r\n\r\nimport './EditBug.css';\r\n\r\nexport default function EditBug(props) {\r\n    const { pathname } = useLocation();\r\n    const isCreateBug = pathname === \"/createBug\" ? true : false;\r\n    function resetBugFields() {\r\n        return (\r\n            {\r\n                id: \"\",\r\n                bugTitle: \"\",\r\n                bugDescription: \"\",\r\n                bugCreatedDate: isCreateBug ? new Date().toISOString().split('T')[0] : \"\",\r\n                bugCreatedBy: isCreateBug ? props.currentUserData.id : \"\",\r\n                bugAssignedTo: \"0\",\r\n                bugDueDate: \"\",\r\n                bugStatus: \"1\",\r\n                bugSeverity: \"1\",\r\n                bugReproducibility: \"1\"\r\n            }\r\n        );\r\n    }\r\n\r\n    const [submitMessage, setSubmitMessage] = useState({ message: isCreateBug ? \"Enter New Bug Details\" : \"Edit Bug Details\", messageType: \"success\", show: true });\r\n    const [successMessage, setSuccessMessage] = useState({ message: \"message here\", success: true, show: false });\r\n    const [newBug, setNewBug] = useState(resetBugFields());\r\n    const { bugTitle, bugDescription, bugCreatedDate, bugCreatedBy, bugAssignedTo, bugDueDate, bugStatus, bugSeverity, bugReproducibility } = newBug; // destructuring\r\n    const [isCreateBugState, setisCreateBugState] = useState(isCreateBug ? true : false);\r\n    let history = useHistory();\r\n\r\n    if (isCreateBug !== isCreateBugState) {\r\n        console.log(\"change\");\r\n        setNewBug(resetBugFields());\r\n        setisCreateBugState(isCreateBug ? true : false);\r\n    }\r\n\r\n    let { id } = useParams();\r\n\r\n    const callback = response => {\r\n        console.log(response);\r\n        const bugDueDate = response.bugDueDate === '0001-01-01' ? \"\" : response.bugDueDate;\r\n        setNewBug({\r\n            id: response.id,\r\n            bugTitle: response.bugTitle,\r\n            bugDescription: response.bugDescription,\r\n            bugCreatedDate: response.bugCreatedDate,\r\n            bugCreatedBy: response.bugCreatedBy,\r\n            bugAssignedTo: response.bugAssignedTo,\r\n            bugDueDate: bugDueDate,\r\n            bugStatus: response.bugStatus,\r\n            bugSeverity: response.bugSeverity,\r\n            bugReproducibility: response.bugReproducibility\r\n        });\r\n    }\r\n    if (newBug.id === '' && !isCreateBug) { dbBugs.getBug(id, callback); }\r\n\r\n    // console.log (\"EditBug user = \" + newBug.bugAssignedTo);\r\n    // console.log(\"EditBug bugSeverityLevels \", props.bugSeverityLevels);\r\n\r\n    const handleInput = e => {\r\n        const { name, value } = e.target; // destructuring\r\n        setNewBug({ ...newBug, [name]: value });\r\n    }\r\n\r\n    const updateCallback = response => {\r\n        console.log(\"update callback: \" + response);\r\n        // debugger;\r\n        if (response === '1') {\r\n            setSuccessMessage({ message: \"Bug successfully updated.\", success: true, show: true });\r\n        } else {\r\n            setSuccessMessage({ message: \"Error entering bug.\", success: false, show: true });\r\n        }\r\n    }\r\n\r\n    const submitBugCallback = response => {\r\n        if (response === '1') {\r\n            setSuccessMessage({ message: \"New bug successfully entered.\", success: true, show: true });\r\n            setNewBug(resetBugFields());\r\n            // setSubmitMessage( current => ({...current, message: \"Enter New Bug Details\"}))\r\n        } else {\r\n            setSuccessMessage({ message: `Error creating bug. (${response})`, success: false, show: true });\r\n        }\r\n    }\r\n\r\n    const submitBug = e => {\r\n        e.preventDefault();\r\n        console.log(\"submit Bug\");\r\n        dbBugs.submitBug(newBug, submitBugCallback);\r\n    }\r\n\r\n    const updateBug = e => {\r\n        e.preventDefault();\r\n        console.log(\"update Bug\");\r\n        // debugger;\r\n        dbBugs.updateBug(newBug, updateCallback);\r\n    }\r\n\r\n    const deleteCallback = response => {\r\n        console.log(response);\r\n    }\r\n\r\n    const deleteBug = () => {\r\n        let SQL = `(id = ${id})`;\r\n        console.log(`SQL = ${SQL}`);\r\n        dbBugs.deleteBugs(SQL, deleteCallback);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"mainWindow\" style={{ padding: '30px' }}>\r\n                {submitMessage.show &&\r\n                    <>\r\n                        <h1>{submitMessage.message}</h1>\r\n                        <SuccessWindow message={successMessage.message} success={successMessage.success} show={successMessage.show} setShow={show => setSuccessMessage(current => ({ ...successMessage, show: show }))} />\r\n                    </>}\r\n                <form>\r\n                    <UserDataField field={\"bugTitle\"} value={bugTitle} onChange={handleInput} handleInput={handleInput} hasAutoFocus={true}>Title</UserDataField>\r\n\r\n                    <div className=\"flexColumnContainer inputFieldPadding\">\r\n                        <label className=\"bold\" htmlFor=\"bugDescription\">Description:</label>\r\n                        <textarea rows=\"4\" className=\"centeredContainerInput\" onChange={handleInput} id=\"bugDescription\" name=\"bugDescription\" value={bugDescription}></textarea>\r\n                    </div>\r\n\r\n                    {/* <div>\r\n                        <div><label htmlFor=\"bugDescription\">Description:</label></div>\r\n                        <textarea onChange={handleInput} id=\"bugDescription\" name=\"bugDescription\" value={bugDescription}></textarea>\r\n                    </div> */}\r\n                    <div className=\"flexRowContainer\">\r\n                        {/* <UserDataField field={\"bugCreatedDate\"} value={bugCreatedDate} handleInput={handleInput} hasAutoFocus={true}>Creation Date</UserDataField> */}\r\n\r\n                        <div className=\"flexColumnContainer inputFieldPadding\">\r\n                            <label className=\"bold\" htmlFor=\"bugCreatedDate\">Creation Date:</label>\r\n                            <input className=\"centeredContainerInput\" onChange={handleInput} type=\"date\" id=\"bugCreatedDate\" name=\"bugCreatedDate\" value={bugCreatedDate}></input>\r\n                        </div>\r\n\r\n                        <SelectUser user={bugCreatedBy} userList={props.userList} onChange={user => setNewBug({ ...newBug, bugCreatedBy: user })}>Created By</SelectUser>\r\n                        <SelectUser user={bugAssignedTo} userList={props.userList} onChange={user => setNewBug({ ...newBug, bugAssignedTo: user })}>Assigned To</SelectUser>\r\n\r\n                        <div className=\"flexColumnContainer inputFieldPadding\">\r\n                            <label className=\"bold\" htmlFor=\"bugDueDate\">Due Date:</label>\r\n                            <input className=\"centeredContainerInput\" onChange={handleInput} type=\"date\" id=\"bugDueDate\" name=\"bugDueDate\" value={bugDueDate}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flexRowContainer\">\r\n                        <SelectBugStatus bugStatusStages={props.bugStatusStages} bugStatus={bugStatus} onChange={newStatus => setNewBug({ ...newBug, bugStatus: newStatus })} />\r\n                        <SelectBugSeverityLevel onChange={bugLevel => setNewBug({ ...newBug, bugSeverity: bugLevel })} bugSeverityLevels={props.bugSeverityLevels} bugSeverity={bugSeverity}>Bug Severity</SelectBugSeverityLevel>\r\n                        <SelectBugReproducibility onChange={bugLevel => {\r\n                            console.log(\"buglevel = \", bugLevel);\r\n                            setNewBug({ ...newBug, bugReproducibility: bugLevel });\r\n                        }} bugReproducibilityOptions={props.bugReproducibilityOptions} bugReproducibility={bugReproducibility}>Bug Reproducibility</SelectBugReproducibility>\r\n                        {/* <label htmlFor=\"bugReproducibleFrequency\">Reproducible Frequency:</label>\r\n                        <input onChange={handleInput} type=\"text\" id=\"bugReproducibleFrequency\" name=\"bugReproducableFrequency\" value={bugReproducableFrequency}></input> */}\r\n                    </div>\r\n\r\n                    <div className=\"dividing-line-main\" style={{ marginTop: '10px' }}></div>\r\n\r\n                    <div className=\"flexRowContainer hideOnPrint\" style={{ justifyContent: 'center' }}>\r\n                        <Link to=\"/\">\r\n                            <input className=\"centeredContainerButton tertiaryButton buttonEnabled\"  type=\"button\" value=\"Cancel\" />\r\n                        </Link>\r\n                        { !isCreateBug &&\r\n                            <Link to=\"/\">\r\n                                <input onClick={deleteBug} className=\"centeredContainerButton tertiaryButton buttonEnabled\" type=\"button\" value=\"Delete\" />\r\n                            </Link>\r\n                        }\r\n                        <Link to=\"/\">\r\n                            <input onClick={isCreateBug ? submitBug : updateBug} className=\"centeredContainerButton primaryButton buttonEnabled\" type=\"button\" value={isCreateBug ? \"Submit New Bug\" : \"Update Bug\"}></input>\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Error() {\r\n    return <div>\r\n        Please check your connection to the internet.\r\n    </div>\r\n}\r\n","// https://dev.to/abdulbasit313/an-easy-way-to-create-a-customize-dynamic-table-in-react-js-3igg\r\n// https://www.youtube.com/watch?v=ri5Nqe_IK50\r\n// https://medium.com/allenhwkim/mobile-friendly-table-b0cb066dbc0e\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n\r\n} from \"react-router-dom\";\r\nimport Header from './components/Header';\r\nimport Sidebar from './components/Sidebar';\r\n// import BugListView from './components/BugListView';\r\nimport Login from './components/Login';\r\nimport UserDetails from './components/UserDetails';\r\nimport Dashboard from './components/Dashboard';\r\nimport EditBug from './components/EditBug';\r\nimport Error from './components/Error';\r\nimport * as dbBugs from '../src/backend/dbBugRequests';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  \r\n  const [loading, setLoading] = useState(true);  // TODO\r\n  const [currentUserData, setCurrentUserData] = useState({});\r\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\r\n  // const [isProgramError, setIsProgramError] = useState(false);\r\n  const [bugList, setBugList] = useState([{id:''}]);  // default id to prevent \"unique key prop\" error\r\n  const [userList, setUserList] = useState([]);\r\n  const [bugSeverityLevels, setBugSeverityLevels] = useState([]);\r\n  const [bugStatusStages, setBugStatusStages] = useState([]);\r\n  const [bugReproducibilityOptions, setBugReproducibilityOptions] = useState([]);\r\n  \r\n  // function checkIfAuthenticated() {\r\n  //   fetch(\"http://localhost:4000/user\").then( x =>\r\n  //     x.json().then( y => {\r\n  //     setIsAuthenticated(true);\r\n  //     // How to get Current User in React from JWT Cookie\r\n  //     // https://www.youtube.com/watch?v=jsaOTcBe-dM\r\n  //     setCurrentUserData( {} );\r\n  //     setLoading(false);\r\n  //     })\r\n  //   );\r\n  // }\r\n\r\n  if (bugSeverityLevels.length === 0) {\r\n    dbBugs.getBugSeverityLevels(async (levels) => {\r\n      if (levels.length) {\r\n        setBugSeverityLevels(levels);\r\n        // setIsProgramError(false);\r\n      } else {\r\n        console.log (\"no length\")\r\n        // setIsProgramError(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (bugStatusStages.length === 0) {\r\n    dbBugs.getBugStatusStages(async (stages) => {\r\n      setBugStatusStages(stages);\r\n    });\r\n  }\r\n\r\n  if (bugReproducibilityOptions.length === 0) {\r\n    dbBugs.getBugReproducibilityOptions(async (options) => setBugReproducibilityOptions(options));\r\n  }\r\n\r\n  const logout = () => {  // TODO - SPA authentification\r\n    // https://dev.to/rdegges/please-stop-using-local-storage-1i04\r\n    // https://medium.com/@jcbaey/authentication-in-spa-reactjs-and-vuejs-the-right-way-e4a9ac5cd9a3\r\n    // https://jcbaey.com/authentication-in-spa-reactjs-and-vuejs-the-right-way?utm_source=medium&utm_campaign=spa-authentication\r\n\r\n    console.log(\"App: logging out\");\r\n    setIsAuthenticated(false);\r\n    setCurrentUserData({});\r\n    localStorage.setItem('userInfo', {'firstName': 'default', 'lastName': 'user'});\r\n  }\r\n\r\n// debugger;\r\n  // if (loading) {\r\n  //   // return <div>Loading...</div>\r\n  // }\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      <Router>\r\n        <Header \r\n          isAuthenticated={isAuthenticated} \r\n          logout={ () => logout() }\r\n          setIsAuthenticated={ authenticated => setIsAuthenticated(authenticated)} // enable user to log out\r\n          currentUserData={currentUserData}\r\n        />\r\n        {/* {isProgramError ? <Redirect to=\"/error\"></Redirect> : <Redirect to=\"/\"></Redirect> } */}\r\n        <Switch>\r\n          <Route exact path={[\"/\"]}>\r\n            { isAuthenticated\r\n            // ? <CreateBug bugList={bugList} setBugList ={ newList => setBugList(newList)}/>\r\n            ? <Dashboard \r\n                bugList={bugList} \r\n                setBugList= { newList => setBugList(newList)} \r\n                userList={userList} \r\n                setUserList={ users => setUserList(users)}\r\n                bugSeverityLevels={bugSeverityLevels}\r\n                bugStatusStages={bugStatusStages}\r\n                bugReproducibilityOptions={bugReproducibilityOptions}\r\n                />\r\n            : <Login \r\n                currentUserData={currentUserData} \r\n                setCurrentUserData={ newData => setCurrentUserData(newData)} \r\n                setIsAuthenticated={ newState => setIsAuthenticated(newState)} />\r\n            }\r\n\r\n          </Route>\r\n          <Route path={[\"/register\", \"/settings\"]}>\r\n            <UserDetails \r\n              currentUserData={currentUserData} \r\n              setCurrentUserData={ newData => setCurrentUserData(newData)} \r\n              setIsAuthenticated={ authenticated => setIsAuthenticated(authenticated)} />\r\n          </Route>\r\n          <Route path={[\"/createBug\", \"/bug/:id\"]}>\r\n            {/* <Sidebar /> */}\r\n            <EditBug \r\n              currentUserData={currentUserData}\r\n              userList={userList} \r\n              bugSeverityLevels={bugSeverityLevels} \r\n              bugStatusStages={bugStatusStages}\r\n              bugReproducibilityOptions={bugReproducibilityOptions}\r\n            />\r\n          </Route>\r\n          <Route path=\"/error\">\r\n            <Error />\r\n          </Route>\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}