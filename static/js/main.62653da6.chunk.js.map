{"version":3,"sources":["components/Header.jsx","backend/dbUserRequests.js","components/Login.jsx","components/UserDataField.jsx","components/UserPwdField.jsx","components/Register.jsx","backend/dbBugRequests.js","components/BugListViewHeader.jsx","components/BugListView.jsx","components/Dashboard.jsx","components/SelectUser.jsx","components/SelectBugSeverityLevel.jsx","components/SelectBugStatus.jsx","components/CreateBug.jsx","components/EditBug.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","currentUserData","firstName","lastName","isAuthenticated","id","to","style","textDecoration","className","marginTop","onClick","logout","type","register","userData","callBackResponse","a","async","require","request","method","url","form","email","pwd","phone","err","httpResponse","body","console","log","result","JSON","parse","affectedRows","checkUniqueEmailCB","Promise","resolve","reject","Table","Login","useState","loginError","setLoginError","showPwd","setShowPwd","htmlElRef","useRef","current","focus","useFocus","inputRef","setInputFocus","allowLogin","length","login","dbUser","data","setCurrentUserData","setIsAuthenticated","handleInput","target","name","value","handleKeypress","e","key","htmlFor","onChange","onKeyPress","autoFocus","ref","UserDataField","errorMsgs","field","hasAutoFocus","isDisabled","children","onInput","defaultValue","disabled","UserPwdField","pwdStrengh","checkPwdStrength","showPwdStengthBar","showPwds","toggleShowPwd","Register","setUserData","landingPage","setErrorMsgs","setShowPwds","history","useHistory","isRegisterPage","location","pathname","isValidEmail","test","strongPasswordRegex","RegExp","mediumPasswordRegex","lowPasswordRegex","checkEmail","hasOwnProperty","dbUsers","isUnique","checkUserData","sourcePwdField","newErrorMsgs","validLoginData","checkPasswordQuality","pwdConfirm","oldState","width","newPwd","justifyContent","marginRight","minWidth","preventDefault","hasAllUserData","push","update","deleteBugs","idList","cb","response","sortDirection","previousSortColumnName","BugListViewHeader","bugListViewKeys","Object","keys","headerInfo","filter","includes","map","index","setBugList","sortColumnName","dataType","bugList","newSort","sort","b","comparison","toLowerCase","sortStringColumn","sortNumberColumn","sortColumn","toUpperCase","BugListView","bugsToDelete","setBugsToDelete","toggleCheckbox","checked","el","deleteCallback","masterCheckbox","checkAllItems","bug","bugStatusName","bugSeverityName","bugTitle","bugCreatedDate","bugAssignedTo","bugDueDate","bugStatus","bugSeverity","bugReproducableFrequency","bugAssignedToName","userList","user","parseInt","bugStatusStages","status","bugSeverityLevels","SeverityLevel","SQL","join","dbBugs","Dashboard","callBack","useEffect","list","unshift","setUserList","generateUserList","SelectUser","SelectBugSeverityLevel","SelectBugStatus","CreateBug","resetBugFields","bugDescription","Date","toISOString","split","bugCreatedBy","newBug","setNewBug","message","messageType","show","submitMessage","setSubmitMessage","callback","onSubmit","db","bugLevel","EditBug","useParams","updateCallback","updateBug","newStatus","App","setBugSeverityLevels","setBugStatusStages","levels","stages","localStorage","setItem","authenticated","exact","path","newList","users","newData","newState","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62653da6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import menuHamburger from '../img/menu-hamburger.png'\r\n\r\nimport './Header.css';\r\n// import '../img/menu-hamburger.png'\r\nexport default function Header(props) {\r\n    const { firstName =\"Default\", lastName = \"User\"} = props.currentUserData;\r\n\r\n    return (\r\n        <header>\r\n            {props.isAuthenticated\r\n                ? <div id=\"headerContainer\">\r\n                    <div id=\"userName\">Welcome, {firstName} {lastName}</div>\r\n                    <div id=\"headerMenu\">\r\n                        <Link to=\"/\" style={{ textDecoration: 'none' }}><div className=\"headerItem\">Dashboard</div></Link>\r\n                        <Link to=\"/createBug\" style={{ textDecoration: 'none' }}><div className=\"headerItem\">Create Bug</div></Link>\r\n                        <Link to=\"settings\" style={{ textDecoration: 'none' }}><i className=\"fa fa-cog headerItem\" style={{ marginTop: '5px' }}></i></Link>\r\n                        <Link to=\"/\" style={{ textDecoration: 'none' }}><div className=\"headerItem\"><span onClick={props.logout} type=\"text\" >Logout</span></div></Link>\r\n                    </div>\r\n                </div>\r\n                : null}\r\n        </header>\r\n\r\n    );\r\n}\r\n","async function checkLoginInfo(userData, callBackResponse) {\r\n    var request = require('request');\r\n    const {\r\n        email = '', pwd = ''\r\n    } = userData;\r\n    console.log(`email ${email} ${pwd}`);\r\n\r\n    request({\r\n        method: 'POST',\r\n        url: 'https://bigbug-365ff5.appdrag.site/api/users/login',\r\n        form: {\r\n            \"email\": email,\r\n            \"pwd\": pwd,\r\n            \"AD_PageNbr\": \"1\",\r\n            \"AD_PageSize\": \"500\"\r\n        }\r\n    }, function (err, httpResponse, body) {\r\n        let result = JSON.parse(body);\r\n        if (result.Table.length !== 0) {\r\n            console.log(\"Welcome \" + result.Table[0].firstName);\r\n            callBackResponse(result.Table[0]);\r\n        } else {\r\n            console.log(\"No data returned\");\r\n            callBackResponse(-1);\r\n        }\r\n    });\r\n}\r\n\r\nasync function register(userData, callBackResponse) {\r\n    var request = require('request');\r\n\r\n    request({\r\n        method: 'POST',\r\n        url: 'https://bigbug-365ff5.appdrag.site/api/users/register',\r\n        form: {\r\n            \"firstName\": userData.firstName,\r\n            \"lastName\": userData.lastName,\r\n            \"email\": userData.email,\r\n            \"pwd\": userData.pwd,\r\n            \"phone\": userData.phone\r\n        }\r\n    }, function (err, httpResponse, body) {\r\n        console.log(body);\r\n        let result = JSON.parse(body);\r\n        callBackResponse(result.affectedRows);\r\n    });\r\n}\r\n\r\nvar request = require('request');\r\n\r\nfunction checkUniqueEmailCB(email) {\r\n return new Promise(function(resolve, reject) {\r\n  request({\r\n     method:'POST',\r\n     url:'https://bigbug-365ff5.appdrag.site/api/checkUniqueEmail', \r\n     form: {\"email\" : email,\"AD_PageNbr\" : \"1\",\"AD_PageSize\" : \"500\"}\r\n  }, function(err,httpResponse,body) {\r\n    if ( err != null ) {\r\n     resolve(err);\r\n    }\r\n    else {\r\n        let result = JSON.parse(body).Table;\r\n        resolve(result);\r\n    }\r\n  });\r\n });\r\n}\r\n\r\n// var request = require('request');\r\n\r\nfunction getUsersCB() {\r\n    return new Promise(function (resolve, reject) {\r\n        request({\r\n            method: 'POST',\r\n            url: 'https://bigbug-365ff5.appdrag.site/api/users/getUsers',\r\n            form: {\r\n                \"AD_PageNbr\": \"1\",\r\n                \"AD_PageSize\": \"500\"\r\n            }\r\n        }, function (err, httpResponse, body) {\r\n            if (err != null) {\r\n                resolve(err);\r\n            } else {\r\n                let result = JSON.parse(body).Table;\r\n                resolve(result);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n// async function getHello(cb) {\r\n//     var request = require('request');\r\n//     // console.log(\"in getHello\");\r\n\r\n//     request({\r\n//         method: 'POST',\r\n//         url: 'https://bigbug-365ff5.appdrag.site/api/hash-bcrypt',\r\n//         form: {\r\n//             \"hash\": \"12345\"\r\n//         }\r\n//     }, function (err, httpResponse, body) {\r\n//         let result = JSON.parse(body);\r\n//         // console.log(result.payload);\r\n//         cb(result.payload);\r\n//     });\r\n// }\r\n\r\nexport {\r\n    // getHello,\r\n    checkLoginInfo,\r\n    register,\r\n    checkUniqueEmailCB,\r\n    getUsersCB\r\n}\r\n","// https://stackoverflow.com/questions/36683770/how-to-get-the-value-of-an-input-field-using-reactjs\r\n// https://www.freecodecamp.org/forum/t/react-redux-adding-a-handler-for-enter-key-events/241151\r\n\r\nimport React, { useState, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as dbUser from \"../backend/dbUserRequests.js\";\r\n\r\n// import './Login.css'\r\n\r\n\r\nexport default function Login(props) {\r\n    const [loginError, setLoginError] = useState(false);\r\n    const [showPwd, setShowPwd] = useState(false);\r\n\r\n\r\n    // General Focus Hook\r\n    // https://stackoverflow.com/questions/28889826/set-focus-on-input-after-render\r\n    const useFocus = () => {\r\n        const htmlElRef = useRef(null);\r\n        const setFocus = () => { htmlElRef.current && htmlElRef.current.focus() };\r\n\r\n        return [htmlElRef, setFocus];\r\n    }\r\n    const [inputRef, setInputFocus] = useFocus();\r\n\r\n    const toggleShowPwd = () => setShowPwd(current => !current);\r\n\r\n    function allowLogin() {\r\n        return props.currentUserData.email && \r\n            props.currentUserData.email.length > 0 && \r\n            props.currentUserData.pwd && \r\n            props.currentUserData.pwd.length > 0;\r\n    }\r\n\r\n    function login() {\r\n        console.log(\"login request\");\r\n        let callBackResponse = data => {\r\n            console.log(\"Data received from CallBack = \", data);\r\n            if (data === -1) {\r\n                setLoginError(true);\r\n                setInputFocus();\r\n                props.setCurrentUserData({ ...props.currentUserData, \"email\": \"\", \"pwd\": \"\" });\r\n\r\n            } else {\r\n                // debugger;\r\n                setLoginError(false);\r\n                props.setCurrentUserData(data);\r\n                props.setIsAuthenticated(true);\r\n            }\r\n        }\r\n        dbUser.checkLoginInfo(props.currentUserData, callBackResponse);\r\n    }\r\n\r\n    function handleInput(target) {\r\n        const { name, value } = target;\r\n        props.setCurrentUserData({ ...props.currentUserData, [name]: value });\r\n    }\r\n\r\n    function handleKeypress(e) {\r\n        const { key } = e;\r\n        if (key === 'Enter' && allowLogin()) {\r\n            login();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"mainWindow\">\r\n            <div className=\"centeredContainer narrowWindow\">\r\n                {loginError && <div className=\"error-text bold\">Incorrect login. Please check your details and try again.</div>}\r\n                <div className=\"flexColumnContainer\">\r\n                    <label className=\"bold\" htmlFor=\"loginEmail\">Email:</label>\r\n                    <input onChange={e => handleInput(e.target)} onKeyPress={e => handleKeypress(e)} id=\"loginEmail\" className=\"centeredContainerInput\" type=\"text\" name=\"email\" value={props.currentUserData.email || ''} autoFocus ref={inputRef} ></input>\r\n                </div>\r\n                <div className=\"flexColumnContainer\">\r\n                    <label className=\"bold\" htmlFor=\"loginPassword\">Password:</label>\r\n                    <input onChange={e => handleInput(e.target)} onKeyPress={e => handleKeypress(e)} id=\"loginPassword\" className=\"centeredContainerInput\" type={showPwd ? \"text\" : \"password\"} name=\"pwd\" value={props.currentUserData.pwd || ''}></input>\r\n                    <i className={showPwd ? \"fa fa-eye-slash passwordEye\" : \"fa fa-eye passwordEye\"} onClick={() => toggleShowPwd()}></i>\r\n\r\n                </div>\r\n                {allowLogin()\r\n                    ? <input id=\"loginButton\" className=\"centeredContainerButton primaryButton buttonEnabled\" onClick={login} type=\"button\" value=\"Login\"></input>\r\n                    : <input id=\"loginDisabled\" className=\"centeredContainerButton primaryButtonDisabled\" type=\"button\" value=\"Login\"></input>\r\n                }\r\n                <div className=\"flexColumnContainer text-center\">\r\n                    <Link to=\"/register\"><input id=\"registerButton\" className=\"centeredContainerButton tertiaryButton buttonEnabled\" type=\"button\" value=\"Register\"></input></Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\n\nexport default function UserDataField(props) {\n    const { errorMsgs = {}, field, value } = props;\n    const hasAutoFocus = props.hasAutoFocus ? true : false;\n    const isDisabled = props.isDisabled ? true : false;\n    return (\n        <div className=\"flexColumnContainer inputFieldPadding\">\n            <label className=\"bold\" htmlFor=\"userDataField\">{props.children}:\n            <span className={errorMsgs[field] ? \"error-text margin-left-30\" : null}>{errorMsgs[field] ? errorMsgs[field] : null}</span>\n            </label>\n            {hasAutoFocus \n            ? <input className=\"centeredContainerInput\" onInput={props.handleInput} id=\"userDataField\" name={field} type=\"text\" defaultValue = {''} value={value || ''} autoFocus></input>\n            : isDisabled \n            ? <input className=\"centeredContainerInput\" onInput={props.handleInput} id=\"userDataField\" name={field} type=\"text\" defaultValue = {''} value={value || ''} disabled></input>\n            : <input className=\"centeredContainerInput\" onInput={props.handleInput} id=\"userDataField\" name={field} type=\"text\" defaultValue = {''} value={value || ''}></input>\n        }\n        </div>\n    )\n}\n","import React from 'react';\n\nexport default function UserPwdField(props) {\n    const { errorMsgs = {}, field, value = '' } = props;\n    const pwdStrengh = props.checkPwdStrength(field);\n    return (\n        <div className=\"flexColumnContainer inputFieldPadding\">\n            <label className=\"bold\" htmlFor=\"UserPwdField\">{props.children}:\n                <span className={errorMsgs[field] ? \"error-text margin-left-30\" : null}>{errorMsgs[field] ? errorMsgs[field] : null}</span>\n                <span className=\"margin-left-30\"></span>\n                {props.showPwdStengthBar && <span className={pwdStrengh}>{pwdStrengh === \"lowPwdStrength\" ? \"(weak)\" : pwdStrengh === \"mediumPwdStrength\" ? \"(okay)\" : pwdStrengh === \"strongPwdStrength\" ? \"(strong)\" : null}</span>}\n            </label>\n            <input className=\"centeredContainerInput\" onInput={props.handleInput} id=\"UserPwdField\" name={field} type={props.showPwds[field] ? \"text\" : \"password\"} value={value}></input>\n            <i className={props.showPwds[field] ? \"fa fa-eye-slash passwordEye\" : \"fa fa-eye passwordEye\"} onClick={() => props.toggleShowPwd(field)}></i>\n            {props.showPwdStengthBar && <div className={pwdStrengh}></div>}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\r\nimport { Link, Redirect, useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport UserDataField from './UserDataField';\r\nimport UserPwdField from './UserPwdField';\r\nimport * as dbUsers from '../backend/dbUserRequests.js';\r\n\r\nimport './Register.css';\r\n\r\nexport default function Register(props) {\r\n    const [userData, setUserData] = useState(props.currentUserData);\r\n    const { email, pwd, firstName, lastName, phone, landingPage } = userData;  // destructuring\r\n    const [errorMsgs, setErrorMsgs] = useState({});\r\n    const [showPwds, setShowPwds] = useState({});\r\n    let history = useHistory();\r\n    let isRegisterPage = history.location.pathname === '/register' ? true : false;\r\n\r\n    const isValidEmail = email => /^.+@.+\\..+$/.test(email);\r\n    // https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/\r\n    const strongPasswordRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#_$%^&*-])(?=.{8,})\");\r\n    const mediumPasswordRegex = new RegExp(\"^(((?=.*[a-z!@#_$%^&*-])(?=.*[A-Z!@#_$%^&*-]))|((?=.*[a-z!@#_$%^&*-])(?=.*[0-9!@#_$%^&*-]))|((?=.*[A-Z!@#_$%^&*-])(?=.*[0-9!@#_$%^&*-])))(?=.{6,})\");\r\n    const lowPasswordRegex = new RegExp(\"^(?=.*[0-9a-zA-Z!@#_$%^&*-])(?=.{3,})\");\r\n\r\n    async function checkEmail() {\r\n        const { email } = userData;\r\n        // console.log(\"register request\");\r\n        console.log('email = ', email);\r\n        console.log('errorMsgs = ', errorMsgs);\r\n        if (userData.hasOwnProperty('email') && email.length !== 0) {\r\n            console.log(\"is email\");\r\n            console.log(\"valid?\", isValidEmail(email));\r\n            if (isValidEmail(email)) {\r\n                const isUnique = await dbUsers.checkUniqueEmailCB(email);\r\n                if (isUnique.length === 0) {\r\n                    console.log(\"is unique\", isUnique);\r\n                    // let callBackResponse = data => {\r\n                    //     console.log(\"Data received from CallBack = \", data);\r\n                    // }\r\n                    // dbUsers.register(userData, callBackResponse);\r\n                    return true;\r\n                } else {\r\n                    console.log(\"not unique\", isUnique);\r\n                    setErrorMsgs(current => ({ ...current, email: \"This email address already is registered\" }))\r\n                }\r\n            } else {\r\n                console.log(\"no email\");\r\n                setErrorMsgs(current => ({ ...current, email: \"Not Valid Email\" }))\r\n            }\r\n        } else {\r\n            console.log(\"no email\");\r\n            setErrorMsgs(current => ({ ...current, email: \"No Email\" }))\r\n\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async function isPwdCorrect() {\r\n        const { email, pwd } = userData;\r\n        return true; // TODO check pwd is correct for this email\r\n    }\r\n\r\n    const checkPasswordQuality = (sourcePwdField) => userData[sourcePwdField] && userData[sourcePwdField].length > 2;\r\n\r\n    const checkUserData = (sourcePwdField) => {\r\n        let newErrorMsgs = { firstName: '', lastName: '', [sourcePwdField]: '', pwdConfirm: '' };\r\n        let validLoginData = true;\r\n        if (!(firstName && firstName.length >= 2)) {\r\n            newErrorMsgs = ({ ...newErrorMsgs, firstName: \"Name needs to be at least 2 characters.\" });\r\n            validLoginData = false;\r\n        }\r\n        if (!(lastName && lastName.length >= 2)) {\r\n            newErrorMsgs = ({ ...newErrorMsgs, lastName: \"Name needs to be at least 2 characters.\" });\r\n            validLoginData = false;\r\n        }\r\n        if (sourcePwdField === 'pwd' || userData[sourcePwdField] && userData[sourcePwdField].length !== 0) {\r\n            if (!checkPasswordQuality(sourcePwdField)) {\r\n                newErrorMsgs = ({ ...newErrorMsgs, [sourcePwdField]: \"pwd not strong enough\" });\r\n                validLoginData = false;\r\n            } else if (!(userData.pwdConfirm && (userData[sourcePwdField] == userData.pwdConfirm))) {\r\n                newErrorMsgs = ({ ...newErrorMsgs, pwdConfirm: \"pwd doesn't match\" });\r\n                validLoginData = false;\r\n            }\r\n        }\r\n        setErrorMsgs(current => ({ ...current, ...newErrorMsgs }));\r\n        return validLoginData;\r\n    }\r\n\r\n    async function register(e) {\r\n        e.preventDefault();\r\n        let hasAllUserData = checkUserData(\"pwd\");\r\n        if (await checkEmail() && hasAllUserData) {\r\n            let callBackResponse = data => {\r\n                // console.log(\"Data received from CallBack = \", data);\r\n                props.setIsAuthenticated(true);\r\n                props.setCurrentUserData(userData);\r\n                history.push(\"/\");\r\n            }\r\n            dbUsers.register(userData, callBackResponse);\r\n        }\r\n    }\r\n\r\n    async function update(e) {\r\n        e.preventDefault();\r\n        let hasAllUserData = checkUserData(\"newPwd\");\r\n        if (await isPwdCorrect() && hasAllUserData) {\r\n            let callBackResponse = data => {\r\n                // console.log(\"Data received from CallBack = \", data);\r\n                props.setCurrentUserData(userData);\r\n                history.push(\"/\");\r\n            }\r\n            console.log(\"Will update settings\");\r\n            // dbUsers.register(userData, callBackResponse);\r\n            // TODO update user data\r\n        }\r\n    }\r\n\r\n    const toggleShowPwd = (target) => setShowPwds(current => ({ ...current, [target]: !current[target] }));\r\n\r\n    const checkPwdStrength = (field) =>\r\n        !(field in userData) ? \"noPwdStrength\"\r\n            : strongPasswordRegex.test(userData[field]) ? \"strongPwdStrength\"\r\n                : mediumPasswordRegex.test(userData[field]) ? \"mediumPwdStrength\"\r\n                    : lowPasswordRegex.test(userData[field]) ? \"lowPwdStrength\"\r\n                        : \"noPwdStrength\"\r\n\r\n    const handleInput = e => {\r\n        const { name, value } = e.target;\r\n        setErrorMsgs(oldState => ({ ...oldState, [name]: '' }))\r\n        setUserData(oldState => {\r\n            return ({ ...oldState, [name]: value })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"mainWindow\">\r\n            <div className=\"centeredContainer\" style={{ width: 'inherit' }}>\r\n                <div className=\"bold\"><h1>{isRegisterPage ? \"Registration Information:\" : \"Update Your Settings:\"}</h1></div>\r\n                <div className=\"flexRowContainer\">\r\n                    <UserDataField field={\"firstName\"} value={firstName} errorMsgs={errorMsgs} handleInput={handleInput} hasAutoFocus={true}>First Name</UserDataField>\r\n                    <UserDataField field={\"lastName\"} value={lastName} errorMsgs={errorMsgs} handleInput={handleInput}>Last Name</UserDataField>\r\n                </div>\r\n                {isRegisterPage\r\n                    ? <UserDataField field={\"email\"} value={email} errorMsgs={errorMsgs} handleInput={handleInput}>Email</UserDataField>\r\n                    : <UserDataField field={\"email\"} value={email} isDisabled={true} handleInput={handleInput}>Email</UserDataField>\r\n\r\n                }\r\n\r\n\r\n                <div className=\"flexRowContainer\">\r\n                    {isRegisterPage\r\n                        ? <UserPwdField field={\"pwd\"} value={pwd} showPwds={showPwds} toggleShowPwd={toggleShowPwd} showPwdStengthBar={true} errorMsgs={errorMsgs} handleInput={handleInput} checkPwdStrength={checkPwdStrength}>Password</UserPwdField>\r\n                        :\r\n                        <>\r\n                            <UserPwdField field={\"pwd\"} value={pwd} showPwds={showPwds} toggleShowPwd={toggleShowPwd} showPwdStengthBar={true} errorMsgs={errorMsgs} handleInput={handleInput} checkPwdStrength={checkPwdStrength}>Old Password</UserPwdField>\r\n                            <UserPwdField field={\"newPwd\"} value={userData.newPwd} showPwds={showPwds} toggleShowPwd={toggleShowPwd} showPwdStengthBar={true} errorMsgs={errorMsgs} handleInput={handleInput} checkPwdStrength={checkPwdStrength}>New Password</UserPwdField>\r\n                        </>\r\n                    }\r\n                    <UserPwdField field={\"pwdConfirm\"} value={userData.pwdConfirm} showPwds={showPwds} toggleShowPwd={toggleShowPwd} showPwdStengthBar={false} errorMsgs={errorMsgs} handleInput={handleInput} checkPwdStrength={checkPwdStrength}>Confirm Password</UserPwdField>\r\n                </div>\r\n                <UserDataField field={\"phone\"} value={phone} errorMsgs={errorMsgs} handleInput={handleInput}>Phone</UserDataField>\r\n                <div className=\"flexRowContainer\" style={{ justifyContent: 'center' }}>\r\n                    <Link to=\"/\"><input className=\"centeredContainerButton tertiaryButton buttonEnabled\" style={{ marginTop: '30px', marginRight: '60px', minWidth: '80px' }} type=\"button\" value=\"Back\"></input></Link>\r\n                    <input className=\"centeredContainerButton primaryButton buttonEnabled\" onClick={isRegisterPage ? (e) => register(e) : (e) => update(e)} type=\"button\" value={isRegisterPage ? \"Create Account\" : \"Update Settings\"}></input>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","function submitBug(data, cb) {\r\n  var request = require('request');\r\n\r\n  console.log(\"submitting request\");\r\n  console.log(data);\r\n\r\n  const {\r\n    bugTitle,\r\n    bugDescription,\r\n    bugCreatedDate,\r\n    bugCreatedBy,\r\n    bugAssignedTo,\r\n    bugDueDate,\r\n    bugStatus,\r\n    bugSeverity,\r\n    bugReproducableFrequency\r\n  } = data;\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/submitBug',\r\n    form: {\r\n      \"bugTitle\": bugTitle,\r\n      \"bugDescription\": bugDescription,\r\n      \"bugCreatedDate\": bugCreatedDate,\r\n      \"bugCreatedBy\": bugCreatedBy,\r\n      \"bugAssignedTo\": bugAssignedTo,\r\n      \"bugDueDate\": bugDueDate,\r\n      \"bugStatus\": bugStatus,\r\n      \"bugSeverity\": bugSeverity,\r\n      \"bugReproducableFrequency\": bugReproducableFrequency\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    let result = JSON.parse(body).affectedRows;\r\n    cb(result);\r\n  });\r\n}\r\n\r\nasync function getAllBugs(cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/getAllBugs',\r\n    form: {\r\n      \"AD_PageNbr\": \"1\",\r\n      \"AD_PageSize\": \"500\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    let result = JSON.parse(body);\r\n    // console.log(result);\r\n    cb(result.Table);\r\n  });\r\n}\r\n\r\nfunction getBug(id, cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/getBug',\r\n    form: {\r\n      \"id\": id,\r\n      \"AD_PageNbr\": \"1\",\r\n      \"AD_PageSize\": \"500\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    console.log(body);\r\n    let response = JSON.parse(body);\r\n    cb(response.Table[0]);\r\n  });\r\n}\r\n\r\nfunction updateBug(bug, cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/updateBug',\r\n    form: {\r\n      \"id\": bug.id,\r\n      \"bugTitle\": bug.bugTitle,\r\n      \"bugDescription\": bug.bugDescription,\r\n      \"bugCreatedDate\": bug.bugCreatedDate,\r\n      \"bugCreatedBy\": bug.bugCreatedBy,\r\n      \"bugAssignedTo\": bug.bugAssignedTo,\r\n      \"bugDueDate\": bug.bugDueDate,\r\n      \"bugStatus\": bug.bugStatus,\r\n      \"bugSeverity\": bug.bugSeverity,\r\n      \"bugReproducableFrequency\": bug.bugReproducableFrequency\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    console.log(body);\r\n    let response = JSON.parse(body);\r\n    cb(response.affectedRows);\r\n  });\r\n}\r\n\r\nfunction deleteBugs(idList, cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/deleteBugs',\r\n    form: {\r\n      \"idList\": idList // \"(id = 5) OR (id = 2)\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    console.log(body);\r\n    let response = JSON.parse(body);\r\n    cb(response);\r\n  });\r\n}\r\n\r\nasync function getBugSeverityLevels(cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/getBugSeverityLevels',\r\n    form: {\r\n      \"AD_PageNbr\": \"1\",\r\n      \"AD_PageSize\": \"500\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    let response = JSON.parse(body);\r\n    cb(response.Table);\r\n  });\r\n}\r\n\r\nfunction getBugStatusStages(cb) {\r\n  var request = require('request');\r\n\r\n  request({\r\n    method: 'POST',\r\n    url: 'https://bigbug-365ff5.appdrag.site/api/bugs/getBugStatusStages',\r\n    form: {\r\n      \"AD_PageNbr\": \"1\",\r\n      \"AD_PageSize\": \"500\"\r\n    }\r\n  }, function (err, httpResponse, body) {\r\n    const response = JSON.parse(body);\r\n    cb(response.Table);\r\n  });\r\n}\r\n\r\nexport {\r\n  submitBug,\r\n  getAllBugs,\r\n  getBug,\r\n  updateBug,\r\n  deleteBugs,\r\n  getBugSeverityLevels,\r\n  getBugStatusStages\r\n};\r\n","// https://stackoverflow.com/questions/4647817/javascript-object-rename-key\r\nimport React from 'react';\r\n\r\nimport './BugListView.css'\r\n\r\nlet sortDirection = true;\r\nlet previousSortColumnName = '';\r\n\r\nexport default function BugListViewHeader(props) {\r\n    // console.log(\"in bugHeader\", props.headerInfo);\r\n\r\n    // function renameKeys(obj, newKeys) {\r\n    //     const keyValues = Object.keys(obj).map(key => {\r\n    //         const newKey = newKeys[key] || key;\r\n    //         return { [newKey]: obj[key] };\r\n    //     });\r\n    //     return Object.assign({}, ...keyValues);\r\n    // }\r\n\r\n\r\n    const bugListViewKeys = ['id', 'bugTitle', 'bugCreatedDate', 'bugAssignedTo', 'bugDueDate', 'bugStatus', 'bugSeverity', 'bugReproducibleFrequency'];\r\n    // TODO update header names, but retain sort option with real key names\r\n    // const bugListViewKeysToDisplay = ['id', 'title', 'createdDate', 'assigned to', 'due', 'status', 'severity', 'reproducable'];\r\n    // debugger;\r\n    let allKeys = Object.keys(props.headerInfo);\r\n    let keysToShow = allKeys.filter( key => bugListViewKeys.includes(key));\r\n    keysToShow = bugListViewKeys;\r\n\r\n    // const newKeyNames = { bugTitle: \"title\", bugCreatedDate: \"created\"};\r\n    // keysToShow = renameKeys(keysToShow, newKeyNames);\r\n\r\n    // create initial sort based on first key in list\r\n    // useEffect( () => {\r\n    //     props.setBugList(sortColumn (props, bugListViewKeys[0]));\r\n    // },[]);\r\n\r\n    \r\n    return (\r\n        keysToShow.map( (key, index) => {\r\n            return <th onClick={() => { props.setBugList( sortColumn(props, key) ); } } \r\n                key={index}>\r\n                {key.toUpperCase()}\r\n            </th>\r\n        })\r\n    )\r\n}\r\n\r\nfunction sortStringColumn (a, b, sortColumnName) {\r\n    let comparison = 0;\r\n    if (a[sortColumnName].toLowerCase() > b[sortColumnName].toLowerCase()) {\r\n        comparison = (sortDirection) ? 1 : -1;\r\n    } else if (a[sortColumnName].toLowerCase() < b[sortColumnName].toLowerCase()) {\r\n        comparison = (sortDirection) ? -1 : 1;\r\n    }\r\n    return comparison;\r\n}\r\n\r\nfunction sortNumberColumn (a, b, sortColumnName) {\r\n    let comparison = 0;\r\n    if (a[sortColumnName] > b[sortColumnName]) {\r\n        comparison = (sortDirection) ? 1 : -1;\r\n    } else if (a[sortColumnName] < b[sortColumnName]) {\r\n        comparison = (sortDirection) ? -1 : 1;\r\n    }\r\n    return comparison;\r\n}\r\n\r\nfunction sortColumn (props, sortColumnName) {\r\n    if (previousSortColumnName === sortColumnName) {\r\n        sortDirection = !sortDirection;\r\n    } else {\r\n        sortDirection = true;\r\n        previousSortColumnName = sortColumnName;\r\n    }\r\n\r\n    const dataType = typeof props.bugList[0][sortColumnName];\r\n    let newSort = [...props.bugList];\r\n\r\n    switch (dataType) {\r\n        case 'string':\r\n            newSort.sort( (a, b) => sortStringColumn (a, b, sortColumnName));\r\n            break;\r\n        case 'number':\r\n            newSort.sort( (a, b) => sortNumberColumn (a, b, sortColumnName));\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return newSort;\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BugListViewHeader from './BugListViewHeader';\r\nimport * as dbBugs from '../backend/dbBugRequests';\r\n\r\nimport './BugListView.css'\r\n\r\nexport default function BugListView(props) {\r\n    const [bugsToDelete, setBugsToDelete] = useState([]);\r\n\r\n    const toggleCheckbox = e => {\r\n        const { name, checked } = e.target; // destructuring\r\n        if (checked) {\r\n            setBugsToDelete([...bugsToDelete, name])\r\n        } else {\r\n            setBugsToDelete(bugsToDelete.filter(el => el !== name));\r\n        };\r\n    }\r\n\r\n    const toggleAllCheckBoxes = e => {\r\n        const { checked: masterCheckbox } = e.target;\r\n        console.log(\"master checkbox = \" + masterCheckbox);\r\n        if (masterCheckbox) {\r\n            let checkAllItems = props.bugList.map(el => `(id=${el.id})`);\r\n            setBugsToDelete(checkAllItems);\r\n\r\n        } else {\r\n            setBugsToDelete([]);\r\n        }\r\n    }\r\n\r\n    const deleteCallback = response => {\r\n        console.log(response);\r\n    }\r\n\r\n    const deleteBugs = () => {\r\n        let SQL = bugsToDelete.join(' OR ');\r\n        console.log(SQL);\r\n        dbBugs.deleteBugs(SQL, deleteCallback);\r\n    }\r\n\r\n    const usersCallback = userList => { props.setUserList(userList); }\r\n\r\n\r\n    function listBugs() {\r\n\r\n        return props.bugList.map(bug => {\r\n            const {\r\n                id,\r\n                bugTitle,\r\n                // bugDescription,\r\n                bugCreatedDate,\r\n                // bugCreatedBy,\r\n                bugAssignedTo,\r\n                bugDueDate,\r\n                bugStatus,\r\n                bugSeverity,\r\n                bugReproducableFrequency,\r\n            } = bug; //destructuring\r\n\r\n            let bugAssignedToName = props.userList.filter(user => user.id === parseInt(bugAssignedTo));\r\n            let bugStatusName;\r\n            let bugSeverityName;\r\n            if (bugAssignedToName.length !== 0) {\r\n                bugAssignedToName = (bugAssignedToName[0].firstName + \" \" + bugAssignedToName[0].lastName);\r\n            }\r\n\r\n            if (props.bugStatusStages.length !== 0 && bugStatus) {\r\n                bugStatusName = props.bugStatusStages[parseInt(bugStatus) - 1].status;\r\n            }\r\n\r\n            if (props.bugSeverityLevels.length !== 0 && bugSeverity) {\r\n                bugSeverityName = props.bugSeverityLevels[parseInt(bugSeverity) - 1].SeverityLevel;\r\n            }\r\n\r\n            return (\r\n                <tr key={id}>\r\n                    <td><input className=\"bug_list_view_item bug_list_view_check_box\" type=\"checkbox\" name={`(id=${id})`} onChange={toggleCheckbox} checked={bugsToDelete.includes(`(id=${id})`)}></input></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_id\"><Link to={`/bug/${id}`}>{id}</Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_title\"><Link to={`/bug/${id}`}>{bugTitle}</Link></td>\r\n                    {/* <td className = \"bug_list_view_item bug_list_view_bug_description\">{bugDescription}</td> */}\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_createdDate\"><Link to={`/bug/${id}`}>{bugCreatedDate}</Link></td>\r\n                    {/* <td className = \"bug_list_view_item bug_list_view_bug_createdBy\">{bugCreatedBy}</td> */}\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_assignedTo\"><Link to={`/bug/${id}`}>{bugAssignedToName}</Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_dueDate\"><Link to={`/bug/${id}`}>\r\n                        {bugDueDate == '0001-01-01'\r\n                            ? 'None'\r\n                            : bugDueDate\r\n                        }\r\n                    </Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_status\"><Link to={`/bug/${id}`}>{bugStatusName}</Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_severity\"><Link to={`/bug/${id}`}>{bugSeverityName}</Link></td>\r\n                    <td className=\"bug_list_view_item bug_list_view_bug_reproducibleFrequency\"><Link to={`/bug/${id}`}>{bugReproducableFrequency}</Link></td>\r\n                </tr>\r\n            )\r\n        }\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <table id=\"bug_list_view_table\">\r\n                <thead>\r\n                    <tr key={0}>\r\n                        <th><input className=\"bug_list_view_item bug_list_view_check_box\" type=\"checkbox\" name=\"mainCheckAll\" onChange={toggleAllCheckBoxes} checked={bugsToDelete.length === props.bugList.length}></input></th>\r\n                        <BugListViewHeader\r\n                            headerInfo={props.bugList[0]}\r\n                            bugList={props.bugList}\r\n                            setBugList={props.setBugList}\r\n                        />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {listBugs()}\r\n                </tbody>\r\n            </table>\r\n            {bugsToDelete.length > 0 && <div><input onClick={deleteBugs} type=\"button\" value=\"DELETE\"></input></div>}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport * as dbBugs from '../backend/dbBugRequests.js';\r\nimport * as dbUsers from '../backend/dbUserRequests';\r\nimport BugListView from './BugListView.jsx';\r\n\r\nexport default function Dashboard(props) {\r\n\r\n    const callBack = bugList => { props.setBugList(bugList); }\r\n\r\n    const generateUserList = async () => {\r\n        let list = await dbUsers.getUsersCB();\r\n        list.unshift({id: 0, firstName: \"Unassigned\", lastName: \"\", email: \"\"});\r\n        props.setUserList(list);\r\n    }\r\n\r\n    const usersCallback = userList => { props.setUserList(userList); }\r\n\r\n    useEffect(() => {\r\n        dbBugs.getAllBugs(callBack);\r\n        generateUserList();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <BugListView \r\n                bugList={props.bugList} \r\n                setBugList={props.setBugList} \r\n                userList={props.userList}\r\n                bugStatusStages={props.bugStatusStages}\r\n                bugSeverityLevels={props.bugSeverityLevels}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","//https://medium.com/@andrewmyint/infinite-loop-inside-useeffect-react-hooks-6748de62871\r\n\r\nimport React from 'react';\r\n// import * as dbUsers from '../backend/dbUserRequests';\r\n\r\nexport default function SelectUser(props) {\r\n    // console.log (\"SelectUser user = \" + props.user);\r\n\r\n    const showList = () => {\r\n        return props.userList.map (el => <option key={el.id} value={el.id}>{el.firstName} {el.lastName}</option>)\r\n    }\r\n\r\n    const handleChange = e => {\r\n        props.onChange(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <select value={props.user} onChange={handleChange}>\r\n            {showList()}\r\n        </select>\r\n    )\r\n}\r\n","import React from 'react';\n\nexport default function SelectBugSeverityLevel(props) {\n    const showList = () => {\n        return props.bugSeverityLevels.map ( el => <option key={el.id} value={el.id}>{el.SeverityLevel}</option>)\n    }\n\n    const handleChange = e => {\n        console.log(\"SelectBugSeverity: handleChange: \",e.target.value);\n        props.onChange(e.target.value);\n    }\n    return (\n        <>\n        <label htmlFor=\"bugSeverity\">Severity:</label>\n        <select id=\"bugSeverity\" value={props.bugSeverity} onChange={handleChange}>\n            {showList()}\n        </select>\n        </>\n    )\n}\n","import React from 'react';\n\nexport default function SelectBugStatus(props) {\n    const showList = () => props.bugStatusStages.map( el => <option key={el.id} id={el.id} value={el.id}>{el.status}</option>)\n    const handleChange = e => props.onChange(e.target.value);\n    return (\n        <>\n            <label htmlFor=\"bugStatus\">Status:</label>\n            <select id=\"bugStatus\" value={props.bugStatus} onChange={handleChange}>\n                {showList()}\n            </select>\n        </>\n    )\n}\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SelectUser from './SelectUser';\r\nimport SelectBugSeverityLevel from './SelectBugSeverityLevel';\r\nimport SelectBugStatus from './SelectBugStatus';\r\nimport * as db from '../backend/dbBugRequests';\r\n\r\nimport './CreateBug.css';\r\n\r\nexport default function CreateBug(props) {\r\n\r\n    function resetBugFields() {\r\n        return (\r\n            {\r\n                bugTitle: \"\",\r\n                bugDescription: \"\",\r\n                bugCreatedDate: new Date().toISOString().split('T')[0],\r\n                bugCreatedBy: \"\",\r\n                bugAssignedTo: \"0\",\r\n                bugDueDate: \"\",\r\n                bugStatus: \"1\",\r\n                bugSeverity: \"1\",\r\n                bugReproducableFrequency: \"\"\r\n            }\r\n        );\r\n    }\r\n    const [newBug, setNewBug] = useState(resetBugFields());\r\n    const [submitMessage, setSubmitMessage] = useState({ message: \"Enter New Bug Details\", messageType: \"success\", show: true });\r\n\r\n    const handleInput = e => {\r\n        const { name, value } = e.target; // destructuring\r\n        setNewBug({ ...newBug, [name]: value });\r\n    }\r\n\r\n    const callback = result => {\r\n        if (result === '1') {\r\n            setSubmitMessage({ message: \"New bug successfully entered.\", messageType: \"success\", show: true });\r\n            setNewBug(resetBugFields());\r\n        } else {\r\n            setSubmitMessage({ message: `Error creating bug. (${result})`, messageType: \"failure\", show: true });\r\n        }\r\n    }\r\n\r\n    const submitBug = e => {\r\n        e.preventDefault();\r\n        db.submitBug(newBug, callback);\r\n    }\r\n\r\n    return (\r\n        <div id=\"CreateBugForm\">\r\n            {submitMessage.show && <h1>{submitMessage.message}</h1>}\r\n            <form onSubmit={submitBug}>\r\n                <div>\r\n                    <label htmlFor=\"bugTitle\">Title:</label>\r\n                    <input onChange={handleInput} type=\"text\" id=\"bugTitle\" name=\"bugTitle\" value={newBug.bugTitle}></input>\r\n                </div>\r\n                <div>\r\n                    <div><label htmlFor=\"bugDescription\">Description:</label></div>\r\n                    <textarea onChange={handleInput} id=\"bugDescription\" name=\"bugDescription\" value={newBug.bugDescription}></textarea>\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <div>\r\n                        <label htmlFor=\"bugCreatedDate\">Creation Date:</label>\r\n                        <input onChange={handleInput} type=\"text\" id=\"bugCreatedDate\" name=\"bugCreatedDate\" value={newBug.bugCreatedDate}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"bugCreatedBy\">Created By:</label>\r\n                        {/* TODO - user is logged in user */}\r\n                        <SelectUser user={2} userList={props.userList} onChange={ user => setNewBug( {...newBug, bugCreatedBy:user})} />\r\n                        {/* <input onChange={handleInput} type=\"text\" id=\"bugCreatedBy\" name=\"bugCreatedBy\" value={newBug.bugCreatedBy}></input> */}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"bugAssignedTo\">Assigned To:</label>\r\n                        {/* <input onChange={handleInput} type=\"text\" id=\"bugAssignedTo\" name=\"bugAssignedTo\" value={newBug.bugAssignedTo}></input> */}\r\n                        <SelectUser userList={props.userList} onChange={ user => setNewBug( {...newBug, bugAssignedTo:user})} />\r\n                    </div>\r\n                    {/* <div>\r\n                        <label htmlFor=\"bugAssignedTo\">Assigned To:</label>\r\n                        <input onChange={handleInput} type=\"text\" id=\"bugAssignedTo\" name=\"bugAssignedTo\" value={newBug.bugAssignedTo}></input>\r\n                    </div> */}\r\n                    <div>\r\n                        <label htmlFor=\"bugDueDate\">Due Date:</label>\r\n                        <input onChange={handleInput} type=\"date\" id=\"bugDueDate\" name=\"bugDueDate\" value={newBug.bugDueDate}></input>\r\n                    </div>\r\n                </div>\r\n                <SelectBugStatus bugStatusStages={props.bugStatusStages} bugStatus={newBug.bugStatus} onChange={ status => setNewBug({...newBug, bugStatus: status})}/>\r\n                {/* <label htmlFor=\"bugStatus\">Status:</label> */}\r\n                {/* <input onChange={handleInput} type=\"text\" id=\"bugStatus\" name=\"bugStatus\" value={newBug.bugStatus}></input> */}\r\n                {/* <label htmlFor=\"bugSeverity\">Severity:</label> */}\r\n                {/* <input onChange={handleInput} type=\"text\" id=\"bugSeverity\" name=\"bugSeverity\" value={newBug.bugSeverity}></input> */}\r\n                <SelectBugSeverityLevel onChange={bugLevel => setNewBug({...newBug, bugSeverity: bugLevel})} bugSeverityLevels={props.bugSeverityLevels} bugSeverity={newBug.bugSeverity}/>\r\n                <label htmlFor=\"bugReproducibleFrequency\">Reproducible Frequency:</label>\r\n                <input onChange={handleInput} type=\"text\" id=\"bugReproducibleFrequency\" name=\"bugReproducibleFrequency\" value={newBug.bugReproducableFrequency}></input>\r\n                <div className=\"flex-right\">\r\n                    <Link to=\"/\">\r\n                        <input className=\"btn\" type=\"button\" value=\"Cancel\" />\r\n                    </Link>\r\n                    <input className=\"btn\" type=\"submit\" value=\"Submit New Bug\"></input>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport SelectUser from './SelectUser';\r\nimport SelectBugSeverityLevel from './SelectBugSeverityLevel';\r\nimport SelectBugStatus from './SelectBugStatus';\r\nimport * as dbBugs from '../backend/dbBugRequests';\r\n\r\nexport default function EditBug(props) {\r\n    function resetBugFields() {\r\n        return (\r\n            {\r\n                id: \"\",\r\n                bugTitle: \"\",\r\n                bugDescription: \"\",\r\n                bugCreatedDate: \"\",\r\n                bugCreatedBy: \"\",\r\n                bugAssignedTo: \"\",\r\n                bugDueDate: \"\",\r\n                bugStatus: \"\",\r\n                bugSeverity: \"\",\r\n                bugReproducableFrequency: \"\"\r\n            }\r\n        );\r\n    }\r\n\r\n    const [submitMessage, setSubmitMessage] = useState({ message: \"Edit Bug Details\", messageType: \"success\", show: true });\r\n    const [newBug, setNewBug] = useState(resetBugFields());\r\n\r\n    let { id } = useParams();\r\n\r\n    const callback = response => {\r\n        console.log(response);\r\n        const bugDueDate = response.bugDueDate === '0001-01-01' ? \"\" : response.bugDueDate;\r\n        setNewBug({\r\n            id: response.id,\r\n            bugTitle: response.bugTitle,\r\n            bugDescription: response.bugDescription,\r\n            bugCreatedDate: response.bugCreatedDate,\r\n            bugCreatedBy: response.bugCreatedBy,\r\n            bugAssignedTo: response.bugAssignedTo,\r\n            bugDueDate: bugDueDate,\r\n            bugStatus: response.bugStatus,\r\n            bugSeverity: response.bugSeverity,\r\n            bugReproducableFrequency: response.bugReproducableFrequency\r\n        });\r\n    }\r\n    if (newBug.id === '') { dbBugs.getBug(id, callback); }\r\n\r\n    // console.log (\"EditBug user = \" + newBug.bugAssignedTo);\r\n    // console.log(\"EditBug bugSeverityLevels \", props.bugSeverityLevels);\r\n\r\n    const handleInput = e => {\r\n        const { name, value } = e.target; // destructuring\r\n        setNewBug({ ...newBug, [name]: value });\r\n    }\r\n\r\n    const updateCallback = response => {\r\n        console.log(\"update callback: \" + response);\r\n    }\r\n\r\n    const updateBug = () => {\r\n        dbBugs.updateBug(newBug, updateCallback);\r\n    }\r\n\r\n    const deleteCallback = response => {\r\n        console.log(response);\r\n    }\r\n\r\n    const deleteBug = () => {\r\n        let SQL = `(id = ${id})`;\r\n        console.log(`SQL = ${SQL}`);\r\n        dbBugs.deleteBugs(SQL, deleteCallback);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"CreateBugForm\">\r\n                {submitMessage.show && <h1>{submitMessage.message}</h1>}\r\n                <form onSubmit={updateBug}>\r\n                    <div>\r\n                        <label htmlFor=\"bugTitle\">Title:</label>\r\n                        <input onChange={handleInput} type=\"text\" id=\"bugTitle\" name=\"bugTitle\" value={newBug.bugTitle}></input>\r\n                    </div>\r\n                    <div>\r\n                        <div><label htmlFor=\"bugDescription\">Description:</label></div>\r\n                        <textarea onChange={handleInput} id=\"bugDescription\" name=\"bugDescription\" value={newBug.bugDescription}></textarea>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <div>\r\n                            <label htmlFor=\"bugCreatedDate\">Creation Date:</label>\r\n                            <input onChange={handleInput} type=\"date\" id=\"bugCreatedDate\" name=\"bugCreatedDate\" value={newBug.bugCreatedDate}></input>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"bugCreatedBy\">Created By:</label>\r\n                            <SelectUser user={newBug.bugCreatedBy} userList={props.userList} onChange={ user => setNewBug({...newBug, bugCreatedBy: user})} />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"bugAssignedTo\">Assigned To:</label>\r\n                            <SelectUser user={newBug.bugAssignedTo} userList={props.userList} onChange={user => setNewBug({ ...newBug, bugAssignedTo: user })} />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"bugDueDate\">Due Date:</label>\r\n                            <input onChange={handleInput} type=\"date\" id=\"bugDueDate\" name=\"bugDueDate\" value={newBug.bugDueDate}></input>\r\n                        </div>\r\n                    </div>\r\n                    <SelectBugStatus bugStatusStages={props.bugStatusStages} bugStatus={newBug.bugStatus} onChange={ newStatus => setNewBug({...newBug, bugStatus: newStatus})} />\r\n                    <SelectBugSeverityLevel onChange={bugLevel => setNewBug({...newBug, bugSeverity: bugLevel})} bugSeverityLevels={props.bugSeverityLevels} bugSeverity={newBug.bugSeverity}/>\r\n                    <label htmlFor=\"bugReproducibleFrequency\">Reproducible Frequency:</label>\r\n                    <input onChange={handleInput} type=\"text\" id=\"bugReproducibleFrequency\" name=\"bugReproducableFrequency\" value={newBug.bugReproducableFrequency}></input>\r\n                    <div className=\"flex-right\">\r\n                        <Link to=\"/\">\r\n                            <input className=\"btn\" type=\"button\" value=\"Cancel\" />\r\n                        </Link>\r\n                        <Link to=\"/\">\r\n                            <input onClick={deleteBug} className=\"btn\" type=\"button\" value=\"Delete\" />\r\n                        </Link>\r\n                        <Link to=\"/\">\r\n                            <input onClick={updateBug} className=\"btn\" type=\"button\" value=\"Update Bug\"></input>\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// https://dev.to/abdulbasit313/an-easy-way-to-create-a-customize-dynamic-table-in-react-js-3igg\r\n// https://www.youtube.com/watch?v=ri5Nqe_IK50\r\n// https://medium.com/allenhwkim/mobile-friendly-table-b0cb066dbc0e\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n\r\n} from \"react-router-dom\";\r\nimport Header from './components/Header';\r\nimport Sidebar from './components/Sidebar';\r\n// import BugListView from './components/BugListView';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport Dashboard from './components/Dashboard';\r\nimport CreateBug from './components/CreateBug';\r\nimport EditBug from './components/EditBug';\r\nimport * as dbBugs from '../src/backend/dbBugRequests';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  \r\n  const [loading, setLoading] = useState(true);  // TODO\r\n  const [currentUserData, setCurrentUserData] = useState({});\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [bugList, setBugList] = useState([{id:''}]);  // default id to prevent \"unique key prop\" error\r\n  const [userList, setUserList] = useState([]);\r\n  const [bugSeverityLevels, setBugSeverityLevels] = useState([]);\r\n  const [bugStatusStages, setBugStatusStages] = useState([]);\r\n  \r\n  // debugger;\r\n\r\n  // function checkIfAuthenticated() {\r\n  //   fetch(\"http://localhost:4000/user\").then( x =>\r\n  //     x.json().then( y => {\r\n  //     setIsAuthenticated(true);\r\n  //     // How to get Current User in React from JWT Cookie\r\n  //     // https://www.youtube.com/watch?v=jsaOTcBe-dM\r\n  //     setCurrentUserData( {} );\r\n  //     setLoading(false);\r\n  //     })\r\n  //   );\r\n  // }\r\n\r\n  if (bugSeverityLevels.length === 0) {\r\n    dbBugs.getBugSeverityLevels(async (levels) => {\r\n      setBugSeverityLevels(levels);\r\n    });\r\n  }\r\n\r\n  if (bugStatusStages.length === 0) {\r\n    dbBugs.getBugStatusStages(async (stages) => {\r\n      setBugStatusStages(stages);\r\n    });\r\n  }\r\n\r\n  const logout = () => {  // TODO - SPA authentification\r\n    // https://dev.to/rdegges/please-stop-using-local-storage-1i04\r\n    // https://medium.com/@jcbaey/authentication-in-spa-reactjs-and-vuejs-the-right-way-e4a9ac5cd9a3\r\n    // https://jcbaey.com/authentication-in-spa-reactjs-and-vuejs-the-right-way?utm_source=medium&utm_campaign=spa-authentication\r\n\r\n    console.log(\"App: logging out\");\r\n    setIsAuthenticated(false);\r\n    setCurrentUserData({});\r\n    localStorage.setItem('userInfo', {'firstName': 'default', 'lastName': 'user'});\r\n  }\r\n\r\n// debugger;\r\n  // if (loading) {\r\n  //   // return <div>Loading...</div>\r\n  // }\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      <Router>\r\n        <Header \r\n          isAuthenticated={isAuthenticated} \r\n          logout={ () => logout() }\r\n          setIsAuthenticated={ authenticated => setIsAuthenticated(authenticated)} // enable user to log out\r\n          currentUserData={currentUserData}\r\n        />\r\n        <Switch>\r\n          <Route exact path={[\"/\"]}>\r\n            { isAuthenticated\r\n            // ? <CreateBug bugList={bugList} setBugList ={ newList => setBugList(newList)}/>\r\n            ? <Dashboard \r\n                bugList={bugList} \r\n                setBugList= { newList => setBugList(newList)} \r\n                userList={userList} \r\n                setUserList={ users => setUserList(users)}\r\n                bugSeverityLevels={bugSeverityLevels}\r\n                bugStatusStages={bugStatusStages}\r\n                />\r\n            : <Login \r\n                currentUserData={currentUserData} \r\n                setCurrentUserData={ newData => setCurrentUserData(newData)} \r\n                setIsAuthenticated={ newState => setIsAuthenticated(newState)} />\r\n            }\r\n\r\n          </Route>\r\n          <Route path={[\"/register\", \"/settings\"]}>\r\n            <Register \r\n              currentUserData={currentUserData} \r\n              setCurrentUserData={ newData => setCurrentUserData(newData)} \r\n              setIsAuthenticated={ authenticated => setIsAuthenticated(authenticated)} />\r\n          </Route>\r\n          {/* <Route path=\"/settings\">\r\n            <Settings currentUserData={currentUserData} setCurrentUserData={ newData => setCurrentUserData(newData)} />\r\n          </Route> */}\r\n          <Route path=\"/createBug\">\r\n            <CreateBug \r\n              // currentUser={}\r\n              userList={userList} \r\n              bugSeverityLevels={bugSeverityLevels} \r\n              bugStatusStages={bugStatusStages}\r\n            />\r\n          </Route>\r\n          <Route path=\"/bug/:id\">\r\n            {/* <Sidebar /> */}\r\n            <EditBug \r\n              userList={userList} \r\n              bugSeverityLevels={bugSeverityLevels} \r\n              bugStatusStages={bugStatusStages}\r\n            />\r\n          </Route>\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}